IyBpbmNsdWRlICJiYXNlNjQuaCIKIyBpbmNsdWRlICJmdF9zc2xfZGVzLmgiCgpzdGF0aWMgdm9pZAkJYnVmZmVyaXphdGlvbih0X3NzbF9kZXMgKmRlcywgY2hhciAqYmFzZTY0LCBzaXplX3QgbikKewoJY2hhcgkJYnVmZls0MDk3XTsKCXNpemVfdAkJaTsKCXNpemVfdAkJajsKCglidWZmWzBdID0gJ1wwJzsKCWkgPSAwOwoJaiA9IDA7Cgl3aGlsZSAoaiA8IG4pCgl7CgkJZnRfc3RybmNhdGluZGV4KGJ1ZmYsICZpLCBiYXNlNjQgKyBqLCBkZXMtPmJyZWFrX2hhc2gpOwoJCWZ0X2NoYXJjYXRpbmRleChidWZmLCAmaSwgJ1xuJyk7CgkJaiArPSBkZXMtPmJyZWFrX2hhc2g7CgkJaWYgKGkgKyBkZXMtPmJyZWFrX2hhc2ggPiA0MDk2KQoJCXsKCQkJZnRfZHByaW50ZihkZXMtPm91dHB1dF9maWxlX2ZkLCAiJXMiLCBidWZmKTsKCQkJYnVmZlswXSA9ICdcMCc7CgkJCWkgPSAwOwoJCX0KCX0KCWJ1ZmZbaV0gPSAnXDAnOwoJZnRfZHByaW50ZihkZXMtPm91dHB1dF9maWxlX2ZkLCAiJXNcbiIsIGJ1ZmYpOwp9Cgp2b2lkCQkJcHJpbnRfYmFzZTY0KHRfc3NsX2RlcyAqZGVzLCBjaGFyICpiYXNlNjQpCnsKCXNpemVfdAkJbjsKCglpZiAoIWJhc2U2NCkKCQlyZXR1cm4gOwoJbiA9IGZ0X3N0cmxlbihiYXNlNjQpOwoJaWYgKGRlcy0+YXJncyAmIEZMQUdfREVTX2QpCgkJZnRfZHByaW50ZihkZXMtPm91dHB1dF9maWxlX2ZkLCAiJXNcbiIsIGJhc2U2NCk7CgllbHNlIGlmIChkZXMtPmJyZWFrX2hhc2ggPiAwKQoJCWJ1ZmZlcml6YXRpb24oZGVzLCBiYXNlNjQsIG4pOwoJZWxzZQoJCWZ0X2RwcmludGYoZGVzLT5vdXRwdXRfZmlsZV9mZCwgIiVzXG4iLCBiYXNlNjQpOwoJZnRfc3RyZGVsKCZiYXNlNjQpOwp9CgppbnQJCQkJZ2V0X3N0cl9mZChpbnQgZmQsIGNoYXIgKipsaW5lLCBzaXplX3QgKnNpemUpCnsKCWNoYXIJCWJ1ZmZbMTBdOwoJc3NpemVfdAkJbjsKCglpZiAoISgqbGluZSA9IGZ0X21lbWFsbG9jKDEpKSkKCQlyZXR1cm4gKDApOwoJKnNpemUgPSAwOwoJd2hpbGUgKChuID0gcmVhZChmZCwgJmJ1ZmYsIDEwKSkgPT0gMTApCgl7CgkJaWYgKCEoKmxpbmUgPSBmdF9tZW1qb2luZnJlZWZpcnN0KCpsaW5lLCAqc2l6ZSwgYnVmZiwgMTApKSkKCQkJcmV0dXJuICgwKTsKCQkqc2l6ZSArPSBuOwoJfQoJaWYgKG4gPT0gLTEpCgl7CgkJZnRfc3RyZGVsKCYoKmxpbmUpKTsKCQlyZXR1cm4gKDApOwoJfQoJaWYgKCEoKmxpbmUgPSBmdF9tZW1qb2luZnJlZWZpcnN0KCpsaW5lLCAqc2l6ZSwgYnVmZiwgbikpKQoJCXJldHVybiAoMCk7Cgkqc2l6ZSArPSBuOwoJcmV0dXJuICgxKTsKfQoKc3RhdGljIGNoYXIgCSpiYXNlNjRfZm9yX2ZsYWdfYShjaGFyICptc2csIHNpemVfdCBzaXplLCBjaGFyICpoZXgpCnsKCWNoYXIJCSpyZXQ7CgljaGFyCQkqc2F2ZW1zZzsKCglpZiAoIShzYXZlbXNnID0gZnRfc3RyZHVwKG1zZykpKQoJCXJldHVybiAoTlVMTCk7CglpZiAoIShyZXQgPSBiYXNlNjRfZGVjb2RlKG1zZywgaGV4KSkpCgl7CgkJcmV0ID0gKGJhc2U2NF9lbmNvZGUoc2F2ZW1zZywgc2l6ZSwgaGV4KSk7CgkJZnRfc3RyZGVsKCZzYXZlbXNnKTsKCQlyZXR1cm4gKHJldCk7Cgl9CglmdF9zdHJkZWwoJnNhdmVtc2cpOwoJcmV0dXJuIChyZXQpOwp9CgpjaGFyCQkJKmJhc2U2NCh0X3NzbF9kZXMgKmRlcywgY2hhciAqaGV4KQp7CgljaGFyCQkqbXNnOwoJc2l6ZV90CQlzaXplOwoJY2hhcgkJKnJldDsKCglzZXRfZmRzKGRlcyk7CglpZiAoIWdldF9zdHJfZmQoZGVzLT5pbnB1dF9maWxlX2ZkLCAmbXNnLCAmc2l6ZSkpCgkJcmV0dXJuIChOVUxMKTsKCWlmIChkZXMtPmFyZ3MgJiBGTEFHX0RFU19hKQoJewoJCXJldCA9IGJhc2U2NF9mb3JfZmxhZ19hKG1zZywgc2l6ZSwgaGV4KTsKCQlmdF9zdHJkZWwoJm1zZyk7CgkJcmV0dXJuIChyZXQpOwoJfQoJaWYgKGRlcy0+YXJncyAmIEZMQUdfREVTX2QpCgl7CgkJcmV0ID0gKGJhc2U2NF9kZWNvZGUobXNnLCBoZXgpKTsKCQlmdF9zdHJkZWwoJm1zZyk7CgkJcmV0dXJuIChyZXQpOwoJfQoJcmV0ID0gKGJhc2U2NF9lbmNvZGUobXNnLCBzaXplLCBoZXgpKTsKCWZ0X3N0cmRlbCgmbXNnKTsKCXJldHVybiAocmV0KTsKfQo=
I2luY2x1ZGUgImJhc2U2NC5oIgoKc3RhdGljIGNvbnN0IHVuc2lnbmVkIGNoYXIgZFtdID0gewoJNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjQsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsCgk2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Miw2Niw2Niw2Niw2Myw1Miw1MywKCTU0LDU1LDU2LDU3LDU4LDU5LDYwLDYxLDY2LDY2LDY2LDY1LDY2LDY2LDY2LCAwLCAxLCAyLCAzLCA0LCA1LCA2LCA3LCA4LCA5LAoJMTAsMTEsMTIsMTMsMTQsMTUsMTYsMTcsMTgsMTksMjAsMjEsMjIsMjMsMjQsMjUsNjYsNjYsNjYsNjYsNjYsNjYsMjYsMjcsMjgsCgkyOSwzMCwzMSwzMiwzMywzNCwzNSwzNiwzNywzOCwzOSw0MCw0MSw0Miw0Myw0NCw0NSw0Niw0Nyw0OCw0OSw1MCw1MSw2Niw2NiwKCTY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LAoJNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsCgk2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2Niw2NiwKCTY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LDY2LAoJNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsNjYsCgk2Niw2Niw2Niw2Niw2Niw2Ngp9OwoKc3RhdGljIHVpbnQ4X3QJCSpmdF9jbGVhbl9zdHIoY2hhciAqc3RyLCBzaXplX3QgbikKewoJc2l6ZV90CQkJaTsKCXNpemVfdAkJCWo7CgoJaSA9IDA7CglqID0gMDsKCXdoaWxlIChpIDwgbikKCXsKCQlpZiAoZnRfaXNzcGFjZShzdHJbaV0pKQoJCXsKCQkJaSsrOwoJCQljb250aW51ZSA7CgkJfQoJCXN0cltqXSA9IHN0cltpXTsKCQlpKys7CgkJaisrOwoJfQoJaWYgKGkgIT0gaikKCQlzdHJbal0gPSAnXDAnOwoJcmV0dXJuICgodWludDhfdCAqKXN0cik7Cn0KCnN0YXRpYyBib29sCQkJaW5pdF9iYXNlNjRfZGVjb2RlKHRfYmFzZTY0X2RlY29kZSAqYmFzZSwgdWludDhfdCAqc3RyLAoJY2hhciAqaGV4KQp7CgliYXNlLT5tc2cgPSBmdF9jbGVhbl9zdHIoKGNoYXIgKilzdHIsIGZ0X3N0cmxlbigoY2hhciAqKXN0cikpOwoJYmFzZS0+bXNnX3NpemUgPSBmdF9zdHJsZW4oKGNoYXIgKiliYXNlLT5tc2cpOwoJYmFzZS0+aGV4ID0gaGV4OwoJYmFzZS0+c3RyX2RlY29kZV9zaXplID0gKChiYXNlLT5tc2dfc2l6ZSAvIDQgKiAzKSAtCgkJKGZ0X3N0cnN0cigoY2hhciAqKWJhc2UtPm1zZywgIj09IikgPyAxIDogMCkpOwoJaWYgKCEoYmFzZS0+c3RyX2RlY29kZSA9IGZ0X3N0cm5ldyhiYXNlLT5zdHJfZGVjb2RlX3NpemUgKyAxKSkpCgkJcmV0dXJuIChmYWxzZSk7CgliYXNlLT5lbmQgPSBiYXNlLT5tc2cgKyBiYXNlLT5tc2dfc2l6ZTsKCWJhc2UtPmJ1ZmYgPSAwOwoJYmFzZS0+aW5kZXggPSAwOwoJYmFzZS0+aXRlciA9IDA7CglyZXR1cm4gKHRydWUpOwp9CgpzdGF0aWMgY2hhcgkJCSpmaW5pc2hfYmFzZTY0X2RlY29kZSh0X2Jhc2U2NF9kZWNvZGUgKmJhc2U2NCkKewoJY2hhcgkJCSpyZXQ7CgoJaWYgKGJhc2U2NC0+aXRlciA9PSAzKQoJewoJCWJhc2U2NC0+c3RyX2RlY29kZVtiYXNlNjQtPmluZGV4KytdID0gKGJhc2U2NC0+YnVmZiA+PiAxMCkgJiAyNTU7CgkJaWYgKGJhc2U2NC0+aW5kZXggPiBiYXNlNjQtPnN0cl9kZWNvZGVfc2l6ZSkKCQkJcmV0dXJuIChOVUxMKTsKCQliYXNlNjQtPnN0cl9kZWNvZGVbYmFzZTY0LT5pbmRleCsrXSA9IChiYXNlNjQtPmJ1ZmYgPj4gMikgJiAyNTU7CgkJaWYgKGJhc2U2NC0+aW5kZXggPiBiYXNlNjQtPnN0cl9kZWNvZGVfc2l6ZSkKCQkJcmV0dXJuIChOVUxMKTsKCX0KCWlmIChiYXNlNjQtPml0ZXIgPT0gMikKCQliYXNlNjQtPnN0cl9kZWNvZGVbYmFzZTY0LT5pbmRleCsrXSA9IChiYXNlNjQtPmJ1ZmYgPj4gNCkgJiAyNTU7CglpZiAoYmFzZTY0LT5pbmRleCA+IGJhc2U2NC0+c3RyX2RlY29kZV9zaXplKQoJewoJCWZ0X3N0cmRlbCgmYmFzZTY0LT5zdHJfZGVjb2RlKTsKCQlyZXR1cm4gKE5VTEwpOwoJfQoJaWYgKCEocmV0ID0gZnRfc3RyZHVwKGJhc2U2NC0+c3RyX2RlY29kZSkpKQoJewoJCWZ0X3N0cmRlbCgmYmFzZTY0LT5zdHJfZGVjb2RlKTsKCQlyZXR1cm4gKE5VTEwpOwoJfQoJZnRfc3RyZGVsKCZiYXNlNjQtPnN0cl9kZWNvZGUpOwoJaWYgKGZ0X3N0cl9pc19wcmludGFibGUocmV0KSkKCQlyZXR1cm4gKHJldCk7CglmdF9zdHJkZWwoJnJldCk7CglyZXR1cm4gKE5VTEwpOwp9CgpzdGF0aWMgYm9vbAkJCXByb2Nlc3NfYmFzZTY0X2RlY29kZSh0X2Jhc2U2NF9kZWNvZGUgKmJhc2U2NCwgc2l6ZV90ICppKQp7CgliYXNlNjQtPmJ1ZmYgPSBiYXNlNjQtPmJ1ZmYgPDwgNiB8IGJhc2U2NC0+YzsKCSgqaSkrKzsKCWJhc2U2NC0+aXRlcisrOwoJaWYgKGJhc2U2NC0+aXRlciA9PSA0KQoJewoJCWJhc2U2NC0+c3RyX2RlY29kZVtiYXNlNjQtPmluZGV4KytdID0gKGJhc2U2NC0+YnVmZiA+PiAxNikgJiAyNTU7CgkJaWYgKGJhc2U2NC0+aW5kZXggPiBiYXNlNjQtPnN0cl9kZWNvZGVfc2l6ZSkKCQkJcmV0dXJuIChmYWxzZSk7CgkJYmFzZTY0LT5zdHJfZGVjb2RlW2Jhc2U2NC0+aW5kZXgrK10gPSAoYmFzZTY0LT5idWZmID4+IDgpICYgMjU1OwoJCWlmIChiYXNlNjQtPmluZGV4ID4gYmFzZTY0LT5zdHJfZGVjb2RlX3NpemUpCgkJCXJldHVybiAoZmFsc2UpOwoJCWJhc2U2NC0+c3RyX2RlY29kZVtiYXNlNjQtPmluZGV4KytdID0gYmFzZTY0LT5idWZmICYgMjU1OwoJCWlmIChiYXNlNjQtPmluZGV4ID4gYmFzZTY0LT5zdHJfZGVjb2RlX3NpemUpCgkJCXJldHVybiAoZmFsc2UpOwoJCWJhc2U2NC0+YnVmZiA9IDA7CgkJYmFzZTY0LT5pdGVyID0gMDsKCX0KCXJldHVybiAodHJ1ZSk7Cn0KCmNoYXIJCQkJKmJhc2U2NF9kZWNvZGUoY2hhciAqc3RyLCBjaGFyICpoZXgpCnsKCXRfYmFzZTY0X2RlY29kZQliYXNlNjQ7CglzaXplX3QJCQlpOwoKCWkgPSAwOwoJaWYgKCEoaW5pdF9iYXNlNjRfZGVjb2RlKCZiYXNlNjQsICh1aW50OF90ICopc3RyLCBoZXgpKSkKCQlyZXR1cm4gKE5VTEwpOwoJd2hpbGUgKGkgPCBiYXNlNjQubXNnX3NpemUpCgl7CgkJYmFzZTY0LmMgPSBkW2Jhc2U2NC5tc2dbaV1dOwoJCWlmIChiYXNlNjQuYyA9PSA2NCkKCQl7CgkJCWkrKzsKCQkJY29udGludWUgOwoJCX0KCQllbHNlIGlmIChiYXNlNjQuYyA9PSA2NSkKCQkJYnJlYWsgOwoJCWVsc2UgaWYgKGJhc2U2NC5jID09IDY2KQoJCQlyZXR1cm4gKE5VTEwpOwoJCWVsc2UgaWYgKCEocHJvY2Vzc19iYXNlNjRfZGVjb2RlKCZiYXNlNjQsICZpKSkpCgkJCXJldHVybiAoTlVMTCk7Cgl9CglyZXR1cm4gKGZpbmlzaF9iYXNlNjRfZGVjb2RlKCZiYXNlNjQpKTsKfQoK
I2luY2x1ZGUgImJhc2U2NC5oIgoKc3RhdGljIGJvb2wJCWluaXRfYmFzZTY0KHRfYmFzZTY0ICpiYXNlNjQsIHVpbnQ4X3QgKnN0ciwgc2l6ZV90IG4sIGNoYXIgKmhleCkKewoJYmFzZTY0LT5oYXNoX3NpemUgPSAoKCg0ICogbiAvIDMpICsgMykgJiB+Myk7CglpZiAoIShiYXNlNjQtPmhhc2ggPSBmdF9zdHJuZXcoYmFzZTY0LT5oYXNoX3NpemUpKSkKCQlyZXR1cm4gKGZhbHNlKTsKCWJhc2U2NC0+bXNnID0gc3RyOwoJYmFzZTY0LT5tc2dfc2l6ZSA9IG47CgliYXNlNjQtPnBhZF9jb3VudCA9IG4gJSAzOwoJYmFzZTY0LT5pbmRleCA9IDA7CgliYXNlNjQtPmggPSAwOwoJYmFzZTY0LT5oZXggPSBoZXg7CglyZXR1cm4gKHRydWUpOwp9CgpzdGF0aWMgY2hhcgkJKmZpbmlzaF9iYXNlNjQodF9iYXNlNjQgKmJhc2U2NCkKewoJY2hhciAJCSpyZXQ7CgoJd2hpbGUgKGJhc2U2NC0+cGFkX2NvdW50IDwgMykKCXsKCQlpZiAoYmFzZTY0LT5wYWRfY291bnQgPT0gMCkKCQkJYnJlYWsgOwoJCWJhc2U2NC0+aGFzaFtiYXNlNjQtPmluZGV4XSA9ICc9JzsKCQliYXNlNjQtPmluZGV4Kys7CgkJYmFzZTY0LT5wYWRfY291bnQrKzsKCX0KCWlmICghKHJldCA9IGZ0X3N0cmR1cChiYXNlNjQtPmhhc2gpKSkKCXsKCQlmdF9zdHJkZWwoJmJhc2U2NC0+aGFzaCk7CgkJcmV0dXJuIChOVUxMKTsKCX0KCWZ0X3N0cmRlbCgmYmFzZTY0LT5oYXNoKTsKCXJldHVybiAocmV0KTsKfQoKc3RhdGljIHZvaWQJCXByb2Nlc3NfYmFzZTY0KHRfYmFzZTY0ICpiYXNlNjQsIHNpemVfdCBpKQp7CgliYXNlNjQtPmggPSAoKHVpbnQzMl90KWJhc2U2NC0+bXNnW2ldKSA8PCAxNjsKCWlmICgoaSArIDEpIDwgYmFzZTY0LT5tc2dfc2l6ZSkKCQliYXNlNjQtPmggKz0gKCh1aW50MzJfdCliYXNlNjQtPm1zZ1tpICsgMV0pIDw8IDg7CglpZiAoKGkgKyAyKSA8IGJhc2U2NC0+bXNnX3NpemUpCgkJYmFzZTY0LT5oICs9IGJhc2U2NC0+bXNnW2kgKyAyXTsKCWJhc2U2NC0+aDAgPSAodWludDhfdCkoYmFzZTY0LT5oID4+IDE4KSAmIDYzOwoJYmFzZTY0LT5oMSA9ICh1aW50OF90KShiYXNlNjQtPmggPj4gMTIpICYgNjM7CgliYXNlNjQtPmgyID0gKHVpbnQ4X3QpKGJhc2U2NC0+aCA+PiA2KSAmIDYzOwoJYmFzZTY0LT5oMyA9ICh1aW50OF90KWJhc2U2NC0+aCAmIDYzOwoJYmFzZTY0LT5oYXNoW2Jhc2U2NC0+aW5kZXgrK10gPSBiYXNlNjQtPmhleFtiYXNlNjQtPmgwXTsKCWJhc2U2NC0+aGFzaFtiYXNlNjQtPmluZGV4KytdID0gYmFzZTY0LT5oZXhbYmFzZTY0LT5oMV07CglpZiAoKGkgKyAxKSA8IGJhc2U2NC0+bXNnX3NpemUpCgkJYmFzZTY0LT5oYXNoW2Jhc2U2NC0+aW5kZXgrK10gPSBiYXNlNjQtPmhleFtiYXNlNjQtPmgyXTsKCWlmICgoaSArIDIpIDwgYmFzZTY0LT5tc2dfc2l6ZSkKCQliYXNlNjQtPmhhc2hbYmFzZTY0LT5pbmRleCsrXSA9IGJhc2U2NC0+aGV4W2Jhc2U2NC0+aDNdOwoKfQoKY2hhcgkJCSpiYXNlNjRfZW5jb2RlKGNoYXIgKnN0ciwgc2l6ZV90IHNpemUsIGNoYXIgKmhleCkKewoJdF9iYXNlNjQJYmFzZTY0OwoJc2l6ZV90CQlpOwoKCWkgPSAwOwoJaWYgKCEoaW5pdF9iYXNlNjQoJmJhc2U2NCwgKHVpbnQ4X3QgKilzdHIsIHNpemUsIGhleCkpKQoJCXJldHVybiAoTlVMTCk7Cgl3aGlsZSAoaSA8IHNpemUpCgl7CgkJcHJvY2Vzc19iYXNlNjQoJmJhc2U2NCwgaSk7CgkJaSArPSAzOwoJfQoJcmV0dXJuIChmaW5pc2hfYmFzZTY0KCZiYXNlNjQpKTsKfQo=
I2luY2x1ZGUgImZ0X3NzbC5oIgoKaW50CQkJCWFkZF9maWxlcyh0X3NzbCAqc3NsLCBjaGFyICoqYXYsIGludCBhYywgaW50IHN0YXJ0KQp7CglpZiAoIWF2KQoJCXJldHVybiAoMSk7CglpZiAoYWMgPT0gc3RhcnQpCgkJcmV0dXJuICgxKTsKCWlmICghKHNzbC0+ZmlsZXMgPSBmdF90YWJkdXAoYXYpKSkKCQlyZXR1cm4gKDApOwoJcmV0dXJuICgxKTsKfQoKdm9pZAkJCWNhbGNhcmdzX3MoY2hhciAqKmF2LCB0X3NzbCAqc3NsKQp7CglpbnQJCQlpOwoKCWkgPSAyOwoJd2hpbGUgKGF2W2ldKQoJewoJCWlmIChhdltpXVswXSAhPSAnLScpCgkJCWJyZWFrIDsKCQlpZiAoIShmdF9zdHJjbXAoYXZbaV0sICItcyIpKSkKCQl7CgkJCXNzbC0+bmJfYXJnc19zKys7CgkJCWkgKz0gMjsKCQl9CgkJZWxzZQoJCQlpKys7Cgl9Cn0K
I2luY2x1ZGUgImZ0X3NzbC5oIgoKaW50CQkJCWNvcmUoaW50IGFjLCBjaGFyICoqYXYpCnsKCXRfc3NsCQlzc2w7CgoJaWYgKGFjID09IDEgfHwgIWZ0X3N0cmNtcChhdlsxXSwgIi1oIikgfHwgIWZ0X3N0cmNtcChhdlsxXSwgIi0taGVscCIpKQoJCXJldHVybiAoaGVscChOVUxMLCAxKSk7Cglzc2wuZGlnZXN0ID0gMDsKCXNzbC5hcmdzID0gMDsKCXNzbC50eXBlID0gMDsKCWRpZ2VzdChhdlsxXSwgJnNzbCk7CgljaGVja190eXBlKCZzc2wpOwoJaWYgKHNzbC50eXBlICYgaXNfbWQ1KQoJCXJldHVybiAoZnRfc3NsX21kNSgmc3NsLCBhYywgYXYpKTsKCWVsc2UgaWYgKHNzbC50eXBlICYgaXNfZGVzKQoJCXJldHVybiAoZnRfc3NsX2Rlcygmc3NsLCBhdikpOwoJcmV0dXJuICgxKTsKfQo=
I2luY2x1ZGUgImZ0X3NzbC5oIgoKdm9pZAkJCWluaXRfc3RydWN0KHRfc3NsICpzc2wpCnsKCXNzbC0+YXJncyA9IDA7Cglzc2wtPm5iX2FyZ19zID0gMDsKCXNzbC0+bmJfYXJnc19zID0gMDsKCXNzbC0+b3B0LmFyZ3NfcyA9IE5VTEw7Cglzc2wtPmZpbGVzID0gTlVMTDsKCXNzbC0+c2l6ZV9saW5lID0gMDsKCXNzbC0+bGluZSA9IE5VTEw7Cn0KCmludCAJCQlmdF9zc2xfbWQ1KHRfc3NsICpzc2wsIGludCBhYywgY2hhciAqKmF2KQp7CglpbnQJCQlpOwoKCWluaXRfc3RydWN0KHNzbCk7CgljYWxjYXJnc19zKGF2LCBzc2wpOwoJaWYgKHNzbC0+bmJfYXJnc19zID4gMCkKCQlpZiAoIShzc2wtPm9wdC5hcmdzX3MgPSBmdF90YWJuZXcoc3NsLT5uYl9hcmdzX3MgKyAxKSkpCgkJCXJldHVybiAoMSk7CglpZiAoIShpID0gcGFyc2VyKGF2LCBzc2wpKSkKCXsKCQlmcmVlX2FuZF9leGl0KHNzbCk7CgkJcmV0dXJuICgxKTsKCX0KCWlmICghKGFkZF9maWxlcyhzc2wsIGF2ICsgaSwgYWMsIGkpKSkKCQlyZXR1cm4gKDEpOwoJY2hlY2tfdHlwZShzc2wpOwoJcmV0dXJuIChydW4oc3NsKSk7Cn0K
I2luY2x1ZGUgImZ0X3NzbC5oIgoKaW50CQkJaGVscChjaGFyICphcmcsIGludCByZXQpCnsKCWlmIChhcmcpCgkJZnRfcHJpbnRmKCJmdF9zc2w6ICclcycgaXMgbm90IHZhbGlkXG5cbiIsIGFyZyk7CglmdF9wcmludGYoImZ0X3NzbDogW0RJR0VTVF0gW09QVElPTlNdXG5cbiIpOwoJZnRfcHJpbnRmKCJTdGFuZGFyZCBjb21tYW5kczpcblxuTWVzc2FnZSBEaWdlc3QgY29tbWFuZHM6XG4iKTsKCWZ0X3ByaW50ZigiJXNcblxuIiwgRlRfU1NMX01ENSk7CglmdF9wcmludGYoIkNpcGhlciBjb21tYW5kczpcblxuIik7CglmdF9wcmludGYoIltPUFRJT05TXSAoZnRfc3NsX21kNSk6XG5cbiIpOwoJZnRfcHJpbnRmKCItcDogZWNobyBTVERJTiB0byBTVERPVVQgYW5kIGFwcGVuZCB0aGUgY2hlY2tzdW0gdG8gU1RET1VULlxuIik7CglmdF9wcmludGYoIi1xOiBxdWlldCBtb2RlLlxuIik7CglmdF9wcmludGYoIi1yOiByZXZlcnNlIHRoZSBmb3JtYXQgb2YgdGhlIG91dHB1dC5cbiIpOwoJZnRfcHJpbnRmKCItczogcHJpbnQgdGhlIHN1bSBvZiB0aGUgZ2l2ZW4gc3RyaW5nLlxuXG4iKTsKCWZ0X3ByaW50ZigiW09QVElPTlNdIChiYXNlNjQpOlxuXG4iKTsKCWZ0X3ByaW50ZigiLWE6IGRlY29kZS9lbmNvZGUgdGhlIGlucHV0L291dHB1dCBpbiBiYXNlNjQsIGRlcGVuZGluZyBvbiB0aGUiCgkJIiBlbmNyeXB0IG1vZGVcbiIpOwoJZnRfcHJpbnRmKCItYiwgLXc6IGJyZWFrIGVuY29kZWQgc3RyaW5nIGludG8gbnVtIGNoYXJhY3RlciBsaW5lc1xuIik7CglmdF9wcmludGYoIi1kLCBkZWNyeXB0IG1vZGVcbiIpOwoJZnRfcHJpbnRmKCItZSwgZW5jcnlwdCBtb2RlIChkZWZhdWx0KVxuIik7CglyZXR1cm4gKHJldCk7Cn0KCnZvaWQJCWZyZWVfYW5kX2V4aXQodF9zc2wgKnNzbCkKewoJaWYgKHNzbC0+b3B0LmFyZ3NfcykKCQlmdF9mcmVlX3RhYihzc2wtPm9wdC5hcmdzX3MpOwoJaWYgKHNzbC0+ZmlsZXMpCgkJZnRfZnJlZV90YWIoc3NsLT5maWxlcyk7Cn0K
I2luY2x1ZGUgImZ0X3NzbC5oIgoKaW50CQkJbWFpbihpbnQgYWMsIGNoYXIgKiphdikKewoJcmV0dXJuIChjb3JlKGFjLCBhdikpOwp9Cg==
I2luY2x1ZGUgImZ0X3NzbC5oIgoKaW50CQkJCXBhcnNlX2FyZzIoY2hhciAqKmF2LCBzaXplX3QgKmksIHRfc3NsICpzc2wpCnsKCWlmICghZnRfc3RyY21wKGF2WyppXSwgIi1zIikpCgl7CgkJaWYgKCFhdlsqaSArIDFdKQoJCQlyZXR1cm4gKGhlbHAoTlVMTCwgMCkpOwoJCXNzbC0+YXJncyB8PSBGTEFHX3M7CgkJKmkgKz0gMTsKCQlpZiAoIShzc2wtPm9wdC5hcmdzX3Nbc3NsLT5uYl9hcmdfc10gPSBmdF9zdHJkdXAoYXZbKmldKSkpCgkJCXJldHVybiAoMCk7CgkJc3NsLT5uYl9hcmdfcysrOwoJfQoJcmV0dXJuICgxKTsKfQoKc2l6ZV90CQkJcGFyc2VfYXJnKGNoYXIgKiphdiwgdF9zc2wgKnNzbCkKewoJc2l6ZV90CQlpOwoKCWkgPSAyOwoJd2hpbGUgKGF2W2ldKQoJewoJCWlmIChhdltpXVswXSAhPSAnLScpCgkJCXJldHVybiAoaSk7CgkJaWYgKCFmdF9zdHJjbXAoYXZbaV0sICItcCIpKQoJCQlzc2wtPmFyZ3MgfD0gRkxBR19wOwoJCWVsc2UgaWYgKCFmdF9zdHJjbXAoYXZbaV0sICItcSIpKQoJCQlzc2wtPmFyZ3MgfD0gRkxBR19xOwoJCWVsc2UgaWYgKCFmdF9zdHJjbXAoYXZbaV0sICItciIpKQoJCQlzc2wtPmFyZ3MgfD0gRkxBR19yOwoJCWVsc2UgaWYgKCEocGFyc2VfYXJnMihhdiwgJmksIHNzbCkpKQoJCQlyZXR1cm4gKDApOwoJCWkrKzsKCX0KCXJldHVybiAoaSk7Cn0KCmludAkJCQlwYXJzZXIoY2hhciAqKmF2LCB0X3NzbCAqc3NsKQp7CglzaXplX3QJCWk7CgoJaWYgKCEoZGlnZXN0KGF2WzFdLCBzc2wpKSkKCQlyZXR1cm4gKDApOwoJaWYgKCEoaSA9IHBhcnNlX2FyZyhhdiwgc3NsKSkpCgkJcmV0dXJuICgwKTsKCXJldHVybiAoaSk7Cn0K
I2luY2x1ZGUgImZ0X3NzbC5oIgoKCmludAkJCQlkaWdlc3QoY2hhciAqZGlnZXN0LCB0X3NzbCAqc3NsKQp7CglpZiAoIWZ0X3N0cmNtcChkaWdlc3QsICJtZDUiKSkKCQlzc2wtPmRpZ2VzdCB8PSBkaWdlc3RfbWQ1OwoJZWxzZSBpZiAoIWZ0X3N0cmNtcChkaWdlc3QsICJzaGExIikpCgkJc3NsLT5kaWdlc3QgfD0gZGlnZXN0X3NoYTE7CgllbHNlIGlmICghZnRfc3RyY21wKGRpZ2VzdCwgInNoYTI1NiIpKQoJCXNzbC0+ZGlnZXN0IHw9IGRpZ2VzdF9zaGEyNTY7CgllbHNlIGlmICghZnRfc3RyY21wKGRpZ2VzdCwgInNoYTIyNCIpKQoJCXNzbC0+ZGlnZXN0IHw9IGRpZ2VzdF9zaGEyMjQ7CgllbHNlIGlmICghZnRfc3RyY21wKGRpZ2VzdCwgInNoYTM4NCIpKQoJCXNzbC0+ZGlnZXN0IHw9IGRpZ2VzdF9zaGEzODQ7CgllbHNlIGlmICghZnRfc3RyY21wKGRpZ2VzdCwgInNoYTUxMiIpKQoJCXNzbC0+ZGlnZXN0IHw9IGRpZ2VzdF9zaGE1MTI7CgllbHNlIGlmICghZnRfc3RyY21wKGRpZ2VzdCwgImJhc2U2NCIpKQoJCXNzbC0+ZGlnZXN0IHw9IGRpZ2VzdF9iYXNlNjQ7CgllbHNlCgkJcmV0dXJuIChoZWxwKGRpZ2VzdCwgMCkpOwoJcmV0dXJuICgxKTsKfQoKdm9pZAkJY2hlY2tfdHlwZSh0X3NzbCAqc3NsKQp7CglpZiAoc3NsLT5kaWdlc3QgJiBkaWdlc3RfbWQ1IHx8IHNzbC0+ZGlnZXN0ICYgZGlnZXN0X3NoYTIyNAoJCXx8IHNzbC0+ZGlnZXN0ICYgZGlnZXN0X3NoYTI1NiB8fCBzc2wtPmRpZ2VzdCAmIGRpZ2VzdF9zaGExCgkJfHwgc3NsLT5kaWdlc3QgJiBkaWdlc3Rfc2hhMzg0IHx8IHNzbC0+ZGlnZXN0ICYgZGlnZXN0X3NoYTUxMikKCXsKCQlzc2wtPnR5cGUgfD0gaXNfbWQ1OwoJfQoJZWxzZSBpZiAoc3NsLT5kaWdlc3QgJiBkaWdlc3RfYmFzZTY0KQoJCXNzbC0+dHlwZSB8PSBpc19kZXM7Cn0K
I2luY2x1ZGUgImZ0X3NzbF9kZXMuaCIKCnZvaWQJCQlzZXRfZmRzKHRfc3NsX2RlcyAqZGVzKQp7CglkZXMtPmlucHV0X2ZpbGVfZmQgPSAwOwoJZGVzLT5vdXRwdXRfZmlsZV9mZCA9IDE7Cn0KCg==
I2luY2x1ZGUgImZ0X3NzbC5oIgojaW5jbHVkZSAiZnRfc3NsX2Rlcy5oIgoKdm9pZAkJCWluaXRfc3RydWN0X2Rlcyh0X3NzbCAqc3NsLCB0X3NzbF9kZXMgKmRlcykKewoJZGVzLT5hcmdzID0gMDsKCWRlcy0+ZGlnZXN0ID0gc3NsLT5kaWdlc3Q7CglkZXMtPnR5cGUgPSBzc2wtPnR5cGU7CglkZXMtPmtleSA9IDA7CglkZXMtPnNhbHQgPSAwOwoJZGVzLT5pbnB1dF9maWxlX2ZkID0gLTE7CglkZXMtPm91dHB1dF9maWxlX2ZkID0gMTsKCWRlcy0+YnJlYWtfaGFzaCA9IFdSQVA7CglkZXMtPmRpZ2VzdCA9IDA7Cn0KCmludAkJCQlvcGVuX2Vycm9yKGNoYXIgKmZpbGUsIGludCByZXQpCnsKCWZ0X3ByaW50ZigiZnRfc3NsOiAlczogJXNcblxuIiwgZmlsZSwgTk9fU1VDSF9GSUxFKTsKCXJldHVybiAoaGVscChOVUxMLCByZXQpKTsKfQoKaW50CQkJCXBhcnNlcl9kZXMyKHRfc3NsX2RlcyAqZGVzLCBjaGFyICoqYXYsIGludCAqaSkKewoJaWYgKCghKGZ0X3N0cmNtcChhdlsqaV0sICItYiIpKQoJfHwgIShmdF9zdHJjbXAoYXZbKmldLCAiLXciKSkpICYmIGF2WyppICsgMV0pCgl7CgkJZGVzLT5hcmdzIHw9IEZMQUdfREVTX2I7CgkJZGVzLT5icmVha19oYXNoID0gZnRfYXRvaShhdlsqaSArIDFdKTsKCQkoKmkpKys7Cgl9CgllbHNlCgkJcmV0dXJuIChoZWxwX2RlcyhhdlsqaV0sIDApKTsKCXJldHVybiAoMSk7Cn0KCmludCAJCQlwYXJzZXJfZGVzKHRfc3NsX2RlcyAqZGVzLCBjaGFyICoqYXYpCnsKCWludAkJCWk7CgoJaSA9IDE7Cgl3aGlsZSAoYXZbKytpXSkKCXsKCQlpZiAoIShmdF9zdHJjbXAoYXZbaV0sICItYSIpKSkKCQkJZGVzLT5hcmdzIHw9IEZMQUdfREVTX2E7CgkJZWxzZSBpZiAoIShmdF9zdHJjbXAoYXZbaV0sICItZCIpKSkKCQkJZGVzLT5hcmdzIHw9IEZMQUdfREVTX2Q7CgkJZWxzZSBpZiAoIShmdF9zdHJjbXAoYXZbaV0sICItZSIpKSkKCQkJZGVzLT5hcmdzIHw9IEZMQUdfREVTX2U7CgkJZWxzZSBpZiAoIShmdF9zdHJjbXAoYXZbaV0sICItaSIpKSAmJiBhdltpICsgMV0pCgkJewoJCQlkZXMtPmFyZ3MgfD0gRkxBR19ERVNfaTsKCQkJaWYgKChkZXMtPmlucHV0X2ZpbGVfZmQgPSBvcGVuKGF2W2kgKyAxXSwgT19SRE9OTFkpKSA8IDApCgkJCQlyZXR1cm4gKG9wZW5fZXJyb3IoYXZbaSArIDFdLCAwKSk7CgkJCWkrKzsKCQl9CgkJZWxzZSBpZiAoIShwYXJzZXJfZGVzMihkZXMsIGF2LCAmaSkpKQoJCQlyZXR1cm4gKDApOwoJfQoJcmV0dXJuICgxKTsKfQoKaW50CQkJCWNoZWNrX2RlcGVuZGVuY2llc19hcmcodF9zc2xfZGVzICpkZXMpCnsKCWlmIChkZXMtPmFyZ3MgJiBGTEFHX0RFU19kICYmIGRlcy0+YXJncyAmIEZMQUdfREVTX2UpCgkJcmV0dXJuIChoZWxwKE5VTEwsIDApKTsKCWlmICghKGRlcy0+YXJncyAmIEZMQUdfREVTX2UpICYmICEoZGVzLT5hcmdzICYgRkxBR19ERVNfZCkpCgkJZGVzLT5hcmdzIHw9IEZMQUdfREVTX2U7CglyZXR1cm4gKDEpOwp9CgppbnQJCQkJZnRfc3NsX2Rlcyh0X3NzbCAqc3NsLCBjaGFyICoqYXYpCnsKCXRfc3NsX2RlcwlkZXNfc3RydWN0OwoKCWluaXRfc3RydWN0X2Rlcyhzc2wsICZkZXNfc3RydWN0KTsKCWlmICghKHBhcnNlcl9kZXMoJmRlc19zdHJ1Y3QsIGF2KSkpCgkJcmV0dXJuICgxKTsKCWlmICghKGNoZWNrX2RlcGVuZGVuY2llc19hcmcoJmRlc19zdHJ1Y3QpKSkKCQlyZXR1cm4gKDEpOwoJaWYgKHNzbC0+ZGlnZXN0ICYgZGlnZXN0X2Jhc2U2NCkKCQlwcmludF9iYXNlNjQoJmRlc19zdHJ1Y3QsIGJhc2U2NCgmZGVzX3N0cnVjdCwgSEVYKSk7CglyZXR1cm4gKDApOwp9Cg==
I2luY2x1ZGUgImZ0X3NzbF9kZXMuaCIKCmludAkJCWhlbHBfZGVzKGNoYXIgKmFyZywgaW50IHJldCkKewoJaWYgKGFyZykKCQlmdF9wcmludGYoImZ0X3NzbDogJyVzJyBpcyBub3QgdmFsaWRcblxuIiwgYXJnKTsKCWZ0X3ByaW50ZigiZnRfc3NsOiBbRElHRVNUXSBbT1BUSU9OU11cblxuIik7CglmdF9wcmludGYoIlN0YW5kYXJkIGNvbW1hbmRzOlxuXG5NZXNzYWdlIERpZ2VzdCBjb21tYW5kczpcbiIpOwoJZnRfcHJpbnRmKCJtZDVcbnNoYTI1Nlxuc2hhMVxuc2hhMjI0XG5zaGEzODRcbnNoYTUxMlxuXG4iKTsKCWZ0X3ByaW50ZigiQ2lwaGVyIGNvbW1hbmRzOlxuXG4iKTsKCWZ0X3ByaW50ZigiJXMlc1xuXG4iLCBGVF9TU0xfREVTLCBGVF9TU0xfREVTXzMpOwoJZnRfcHJpbnRmKCJbT1BUSU9OU10gKGZ0X3NzbF9tZDUpOlxuXG4iKTsKCWZ0X3ByaW50ZigiLXA6IGVjaG8gU1RESU4gdG8gU1RET1VUIGFuZCBhcHBlbmQgdGhlIGNoZWNrc3VtIHRvIFNURE9VVC5cbiIpOwoJZnRfcHJpbnRmKCItcTogcXVpZXQgbW9kZS5cbiIpOwoJZnRfcHJpbnRmKCItcjogcmV2ZXJzZSB0aGUgZm9ybWF0IG9mIHRoZSBvdXRwdXQuXG4iKTsKCWZ0X3ByaW50ZigiLXM6IHByaW50IHRoZSBzdW0gb2YgdGhlIGdpdmVuIHN0cmluZy5cblxuIik7CglmdF9wcmludGYoIltPUFRJT05TXSBiYXNlNjQ6XG5cbiIpOwoJZnRfcHJpbnRmKCItYTogZGVjb2RlL2VuY29kZSB0aGUgaW5wdXQvb3V0cHV0IGluIGJhc2U2NCwgZGVwZW5kaW5nIG9uIHRoZSIKCQkJICAiIGVuY3J5cHQgbW9kZVxuIik7CglmdF9wcmludGYoIi1iLCBicmVhayBlbmNvZGVkIHN0cmluZyBpbnRvIG51bSBjaGFyYWN0ZXIgbGluZXNcbiIpOwoJZnRfcHJpbnRmKCItZCwgZGVjcnlwdCBtb2RlXG4iKTsKCWZ0X3ByaW50ZigiLWUsIGVuY3J5cHQgbW9kZSAoZGVmYXVsdClcbiIpOwoJcmV0dXJuIChyZXQpOwp9Cg==
I2luY2x1ZGUgImZ0X3NzbC5oIgojaW5jbHVkZSA8c3RkbGliLmg+Cgpjb25zdCB1aW50MzJfdCBnX21kNXJbXSA9IHsKCTcsIDEyLCAxNywgMjIsIDcsIDEyLCAxNywgMjIsIDcsIDEyLCAxNywgMjIsIDcsIDEyLCAxNywKCTIyLCA1LCA5LCAxNCwgMjAsIDUsIDksIDE0LCAyMCwgNSwgOSwgMTQsIDIwLCA1LCA5LCAxNCwgMjAsIDQsIDExLCAxNiwKCTIzLCA0LCAxMSwgMTYsIDIzLCA0LCAxMSwgMTYsIDIzLCA0LCAxMSwgMTYsIDIzLCA2LCAxMCwgMTUsIDIxLCA2LCAxMCwgMTUsCgkyMSwgNiwgMTAsIDE1LCAyMSwgNiwgMTAsIDE1LCAyMX07Cgpjb25zdCB1aW50MzJfdCBnX21kNWtbXSA9IHsKCTB4ZDc2YWE0NzgsIDB4ZThjN2I3NTYsIDB4MjQyMDcwZGIsIDB4YzFiZGNlZWUsCgkweGY1N2MwZmFmLCAweDQ3ODdjNjJhLCAweGE4MzA0NjEzLCAweGZkNDY5NTAxLAoJMHg2OTgwOThkOCwgMHg4YjQ0ZjdhZiwgMHhmZmZmNWJiMSwgMHg4OTVjZDdiZSwKCTB4NmI5MDExMjIsIDB4ZmQ5ODcxOTMsIDB4YTY3OTQzOGUsIDB4NDliNDA4MjEsCgkweGY2MWUyNTYyLCAweGMwNDBiMzQwLCAweDI2NWU1YTUxLCAweGU5YjZjN2FhLAoJMHhkNjJmMTA1ZCwgMHgwMjQ0MTQ1MywgMHhkOGExZTY4MSwgMHhlN2QzZmJjOCwKCTB4MjFlMWNkZTYsIDB4YzMzNzA3ZDYsIDB4ZjRkNTBkODcsIDB4NDU1YTE0ZWQsCgkweGE5ZTNlOTA1LCAweGZjZWZhM2Y4LCAweDY3NmYwMmQ5LCAweDhkMmE0YzhhLAoJMHhmZmZhMzk0MiwgMHg4NzcxZjY4MSwgMHg2ZDlkNjEyMiwgMHhmZGU1MzgwYywKCTB4YTRiZWVhNDQsIDB4NGJkZWNmYTksIDB4ZjZiYjRiNjAsIDB4YmViZmJjNzAsCgkweDI4OWI3ZWM2LCAweGVhYTEyN2ZhLCAweGQ0ZWYzMDg1LCAweDA0ODgxZDA1LAoJMHhkOWQ0ZDAzOSwgMHhlNmRiOTllNSwgMHgxZmEyN2NmOCwgMHhjNGFjNTY2NSwKCTB4ZjQyOTIyNDQsIDB4NDMyYWZmOTcsIDB4YWI5NDIzYTcsIDB4ZmM5M2EwMzksCgkweDY1NWI1OWMzLCAweDhmMGNjYzkyLCAweGZmZWZmNDdkLCAweDg1ODQ1ZGQxLAoJMHg2ZmE4N2U0ZiwgMHhmZTJjZTZlMCwgMHhhMzAxNDMxNCwgMHg0ZTA4MTFhMSwKCTB4Zjc1MzdlODIsIDB4YmQzYWYyMzUsIDB4MmFkN2QyYmIsIDB4ZWI4NmQzOTF9OwoKaW50CQkJaW5pdF9tZDUodWludDhfdCAqc3RyLCB0X21kNSAqbWQ1LCBzaXplX3Qgc2l6ZV9saW5lKQp7CglzaXplX3QJc3RyX2xlbjsKCgltZDUtPm1zZ19oYXNoID0gTlVMTDsKCW1kNS0+ZmlsZV9oYXNoID0gTlVMTDsKCWlmIChzaXplX2xpbmUgPiAwKQoJCW1kNS0+bXNnX2hhc2ggPSBmdF9zdHJsZW4oKGNoYXIgKilzdHIpID4gMCA/IChjaGFyICopc3RyOiBOVUxMOwoJZWxzZQoJCW1kNS0+ZmlsZV9oYXNoID0gZnRfc3RybGVuKChjaGFyICopc3RyKSA+IDAgPyAoY2hhciAqKXN0cjogTlVMTDsKCW1kNS0+aDAgPSAweDY3NDUyMzAxOwoJbWQ1LT5oMSA9IDB4ZWZjZGFiODk7CgltZDUtPmgyID0gMHg5OGJhZGNmZTsKCW1kNS0+aDMgPSAweDEwMzI1NDc2OwoJc3RyX2xlbiA9IHNpemVfbGluZSA+IDAgPyBzaXplX2xpbmUgOiBmdF9zdHJsZW4oKGNvbnN0IGNoYXIgKilzdHIpOwoJbWQ1LT5tc2dfbGVuID0gc3RyX2xlbiArIDE7Cgl3aGlsZSAobWQ1LT5tc2dfbGVuICUgNjQgIT0gNTYpCgkJbWQ1LT5tc2dfbGVuKys7CglpZiAoIShtZDUtPm1zZyA9IGZ0X3N0cm5ldyhtZDUtPm1zZ19sZW4gKyA2NCkpKQoJCXJldHVybiAoMCk7CglmdF9tZW1jcHkoKGNoYXIqKW1kNS0+bXNnLCAoY29uc3QgY2hhciAqKXN0ciwgc3RyX2xlbik7CgkqKHVpbnQzMl90KikobWQ1LT5tc2cgKyBzdHJfbGVuKSA9IDB4ODA7CgkqKHVpbnQzMl90KikobWQ1LT5tc2cgKyBtZDUtPm1zZ19sZW4pID0gKHVpbnQzMl90KSg4ICogc3RyX2xlbik7CglyZXR1cm4gKDEpOwp9Cgp1aW50MzJfdAlsZWZ0cm90YXRlKHVpbnQzMl90IHgsIHVpbnQzMl90IGMpCnsKCXJldHVybiAoKHggPDwgYykgfCAoeCA+PiAoMzIgLSBjKSkpOwp9Cgp2b2lkCQloYXNoX21kNSh0X21kNSAqbSwgaW50IGkpCnsKCWlmIChpIDwgMTYpCgl7CgkJbS0+ZiA9IChtLT5iICYgbS0+YykgfCAoKH5tLT5iKSAmIG0tPmQpOwoJCW0tPmcgPSBpOwoJfQoJZWxzZSBpZiAoaSA8IDMyKQoJewoJCW0tPmYgPSAobS0+ZCAmIG0tPmIpIHwgKCh+bS0+ZCkgJiBtLT5jKTsKCQltLT5nID0gKDUgKiBpICsgMSkgJSAxNjsKCX0KCWVsc2UgaWYgKGkgPCA0OCkKCXsKCQltLT5mID0gbS0+YiBeIG0tPmMgXiBtLT5kOwoJCW0tPmcgPSAoMyAqIGkgKyA1KSAlIDE2OwoJfQoJZWxzZSBpZiAoaSA8IDY0KQoJewoJCW0tPmYgPSBtLT5jIF4gKG0tPmIgfCAofm0tPmQpKTsKCQltLT5nID0gKDcgKiBpKSAlIDE2OwoJfQoJbS0+c3dhcCA9IG0tPmQ7CgltLT5kID0gbS0+YzsKCW0tPmMgPSBtLT5iOwoJbS0+YiA9IG0tPmIgKyBsZWZ0cm90YXRlKChtLT5hICsgbS0+ZiArIGdfbWQ1a1tpXSArIG0tPndbbS0+Z10pLCBnX21kNXJbaV0pOwoJbS0+YSA9IG0tPnN3YXA7Cn0KCnRfbWQ1IAkJKmZ0X21kNSh1aW50OF90ICpzdHIsIHNpemVfdCBzaXplX2xpbmUpCnsKCXNpemVfdAlvZmZzZXQ7CglpbnQJCWk7Cgl0X21kNQkqbWQ1OwoKCW9mZnNldCA9IDA7CglpZiAoIShtZDUgPSAodF9tZDUgKilmdF9tZW1hbGxvYyhzaXplb2YodF9tZDUpKSkpCgkJcmV0dXJuIChOVUxMKTsKCWlmICghKGluaXRfbWQ1KHN0ciwgbWQ1LCBzaXplX2xpbmUpKSkKCQlyZXR1cm4gKE5VTEwpOwoJd2hpbGUgKG9mZnNldCA8IG1kNS0+bXNnX2xlbikKCXsKCQlpID0gLTE7CgkJbWQ1LT53ID0gKHVpbnQzMl90ICopKG1kNS0+bXNnICsgb2Zmc2V0KTsKCQltZDUtPmEgPSBtZDUtPmgwOwoJCW1kNS0+YiA9IG1kNS0+aDE7CgkJbWQ1LT5jID0gbWQ1LT5oMjsKCQltZDUtPmQgPSBtZDUtPmgzOwoJCXdoaWxlICgrK2kgPCA2NCkKCQkJaGFzaF9tZDUobWQ1LCBpKTsKCQltZDUtPmgwICs9IG1kNS0+YTsKCQltZDUtPmgxICs9IG1kNS0+YjsKCQltZDUtPmgyICs9IG1kNS0+YzsKCQltZDUtPmgzICs9IG1kNS0+ZDsKCQlvZmZzZXQgKz0gNjQ7Cgl9CglmdF9hc3ByaW50ZigmbWQ1LT5oYXNoLCAiJTA4eCUwOHglMDh4JTA4eCIsIHJldmVyc191aW50MzIobWQ1LT5oMCksCgkJcmV2ZXJzX3VpbnQzMihtZDUtPmgxKSwgcmV2ZXJzX3VpbnQzMihtZDUtPmgyKSwgcmV2ZXJzX3VpbnQzMihtZDUtPmgzKSk7CglmdF9zdHJkZWwoJm1kNS0+bXNnKTsKCXJldHVybiAobWQ1KTsKfQo=
I2luY2x1ZGUgImZ0X3NzbC5oIgoKdWludDMyX3QJcmV2ZXJzX3VpbnQzMih1aW50MzJfdCBuKQp7CglyZXR1cm4gKChuID4+IDI0KSB8ICgobiAmIDB4ZmYwMDAwKSA+PiA4KSB8CgkJCSgobiAmIDB4ZmYwMCkgPDwgOCkgfCAobiA8PCAyNCkpOwp9Cgp2b2lkCQlwcmludCh0X3NzbCAqc3NsLCB0X21kNSAqbWQ1KQp7CgljaGFyCSplbmQ7CgoJaWYgKCFtZDUtPmZpbGVfaGFzaCkKCQllbmQgPSBtZDUtPm1zZ19oYXNoOwoJZWxzZQoJCWVuZCA9IG1kNS0+ZmlsZV9oYXNoOwoJaWYgKCEoc3NsLT5hcmdzICYgRkxBR19xKSkKCXsKCQlpZiAoIShzc2wtPmFyZ3MgJiBGTEFHX3IpICYmIG1kNS0+ZmlsZV9oYXNoKQoJCQlmdF9wcmludGYoIk1ENSAoJXMpID0gIiwgbWQ1LT5maWxlX2hhc2gpOwoJCWlmICghKHNzbC0+YXJncyAmIEZMQUdfcikgJiYgIXNzbC0+bGluZQoJCSYmIG1kNS0+bXNnX2hhc2ggJiYgc3NsLT5hcmdzICYgRkxBR19zICYmICFtZDUtPmZpbGVfaGFzaCkKCQkJZnRfcHJpbnRmKCJNRDUgKFwiJXNcIikgPSAiLCBtZDUtPm1zZ19oYXNoKTsKCX0KCWZ0X3ByaW50ZigiJXMiLCBtZDUtPmhhc2gpOwoJZnRfc3RyZGVsKCZtZDUtPmhhc2gpOwoJaWYgKChzc2wtPmFyZ3MgJiBGTEFHX3IpICYmICEoc3NsLT5hcmdzICYgRkxBR19xKSkKCQlmdF9wcmludGYoIiAlc1xuIiwgZW5kKTsKCWVsc2UKCQlmdF9wdXRjaGFyKCdcbicpOwoJbWQ1LT5tc2dfaGFzaCA9IE5VTEw7CgltZDUtPmZpbGVfaGFzaCA9IE5VTEw7Cn0K
I2luY2x1ZGUgImZ0X3NzbC5oIgoKaW50CQkJCWdvX2hhc2godF9zc2wgKnNzbCkKewoJdF9tZDUgCQkqbWQ1OwoKCWlmIChzc2wtPmRpZ2VzdCAmIGRpZ2VzdF9tZDUpCgl7CgkJaWYgKCEobWQ1ID0gZnRfbWQ1KCh1aW50OF90ICopc3NsLT5saW5lLCBzc2wtPnNpemVfbGluZSkpKQoJCQlyZXR1cm4gKDApOwoJCXByaW50KHNzbCwgbWQ1KTsKCQlmdF9tZW1kZWwoKHZvaWQgKikmbWQ1KTsKCX0KCWVsc2UgaWYgKHNzbC0+ZGlnZXN0ICYgZGlnZXN0X3NoYTI1NikKCQlwcmludF9zaGEyNTZfZmQwKHNzbCk7CgllbHNlIGlmIChzc2wtPmRpZ2VzdCAmIGRpZ2VzdF9zaGEyMjQpCgkJcHJpbnRfc2hhMjI0X2ZkMChzc2wpOwoJZWxzZSBpZiAoc3NsLT5kaWdlc3QgJiBkaWdlc3Rfc2hhNTEyKQoJCXByaW50X3NoYTUxMl9mZDAoc3NsKTsKCWVsc2UgaWYgKHNzbC0+ZGlnZXN0ICYgZGlnZXN0X3NoYTM4NCkKCQlwcmludF9zaGEzODRfZmQwKHNzbCk7CglmdF9zdHJkZWwoJnNzbC0+bGluZSk7CglyZXR1cm4gKDApOwp9CgppbnQJCQkJcmVhZF9maWxlKGludCBmZCwgdF9zc2wgKnNzbCkKewoJY2hhcgkJYnVmZls0MDk2ICsgMV07CglpbnQJCQluOwoKCWlmICghKHNzbC0+bGluZSA9IGZ0X21lbWFsbG9jKDEpKSkKCQlyZXR1cm4gKDApOwoJc3NsLT5zaXplX2xpbmUgPSAwOwoJd2hpbGUgKChuID0gcmVhZChmZCwgJmJ1ZmYsIDQwOTYpKSA9PSA0MDk2KQoJewoJCWlmICghKHNzbC0+bGluZSA9IGZ0X21lbWpvaW5mcmVlZmlyc3Qoc3NsLT5saW5lLAoJCQlzc2wtPnNpemVfbGluZSwgYnVmZiwgNDA5NikpKQoJCQlyZXR1cm4gKDApOwoJCXNzbC0+c2l6ZV9saW5lICs9IG47Cgl9CglpZiAobiA9PSAtMSkKCXsKCQlmdF9zdHJkZWwoJnNzbC0+bGluZSk7CgkJcmV0dXJuICgwKTsKCX0KCWlmICghKHNzbC0+bGluZSA9IGZ0X21lbWpvaW5mcmVlZmlyc3Qoc3NsLT5saW5lLAoJCXNzbC0+c2l6ZV9saW5lLCBidWZmLCBuKSkpCgkJcmV0dXJuICgwKTsKCXNzbC0+c2l6ZV9saW5lICs9IG47CglyZXR1cm4gKGdvX2hhc2goc3NsKSk7Cn0KCnN0YXRpYyBpbnQJCXJlYWRfZmlsZXModF9zc2wgKnNzbCkKewoJc2l6ZV90CQlpOwoJaW50CQkJZmQ7CgoJaSA9IDA7Cgl3aGlsZSAoc3NsLT5maWxlcyAmJiBzc2wtPmZpbGVzW2ldKQoJewoJCWlmICgoZmQgPSBvcGVuKHNzbC0+ZmlsZXNbaV0sIE9fUkRPTkxZKSkgPCAwKQoJCXsKCQkJZnRfZHByaW50ZigyLCAibWQ1OiAlczogJXNcbiIsIHNzbC0+ZmlsZXNbaV0sIE5PX1NVQ0hfRklMRSk7CgkJCWkrKzsKCQkJY29udGludWUgOwoJCX0KCQlpZiAocmVhZF9maWxlKGZkLCBzc2wpKQoJCQlyZXR1cm4gKDApOwoJCWNsb3NlKGZkKTsKCQlpKys7Cgl9CglyZXR1cm4gKDEpOwp9CgpzdGF0aWMgaW50CQlzc2xfbWQ1KHRfc3NsICpzc2wpCnsKCXNpemVfdAkJaTsKCXRfbWQ1IAkJKm1kNTsKCglpID0gMDsKCWlmIChzc2wtPmFyZ3MgJiBGTEFHX3AgfHwgKCEoc3NsLT5hcmdzICYgRkxBR19zKSAmJiAhc3NsLT5maWxlcykpCgkJcmVhZF9maWxlKDAsIHNzbCk7CglpZiAoc3NsLT5hcmdzICYgRkxBR19zKQoJewoJCXdoaWxlIChzc2wtPm9wdC5hcmdzX3NbaV0pCgkJewoJCQlpZiAoIShtZDUgPSBmdF9tZDUoKHVpbnQ4X3QgKilzc2wtPm9wdC5hcmdzX3NbaV0sIDApKSkKCQkJCXJldHVybiAoMCk7CgkJCXByaW50KHNzbCwgbWQ1KTsKCQkJZnRfbWVtZGVsKCh2b2lkICopJm1kNSk7CgkJCWkrKzsKCQl9Cgl9CglpZiAoIXJlYWRfZmlsZXMoc3NsKSkKCQlyZXR1cm4gKDApOwoJcmV0dXJuICgxKTsKfQoKaW50CQkJCXJ1bih0X3NzbCAqc3NsKQp7CglpbnQJCQlyZXQ7CgoJcmV0ID0gMDsKCWlmIChzc2wtPmRpZ2VzdCAmIGRpZ2VzdF9tZDUpCgkJcmV0ID0gKHNzbF9tZDUoc3NsKSk7CgllbHNlIGlmIChzc2wtPmRpZ2VzdCAmIGRpZ2VzdF9zaGEyNTYpCgkJY29tcHV0ZV9zaGEyNTYoc3NsKTsKCWVsc2UgaWYgKHNzbC0+ZGlnZXN0ICYgZGlnZXN0X3NoYTIyNCkKCQljb21wdXRlX3NoYTIyNChzc2wpOwoJZWxzZSBpZiAoc3NsLT5kaWdlc3QgJiBkaWdlc3Rfc2hhNTEyKQoJCWNvbXB1dGVfc2hhNTEyKHNzbCk7CgllbHNlIGlmIChzc2wtPmRpZ2VzdCAmIGRpZ2VzdF9zaGEzODQpCgkJY29tcHV0ZV9zaGEzODQoc3NsKTsKCWZyZWVfYW5kX2V4aXQoc3NsKTsKCXJldHVybiAocmV0KTsKfQo=
I2luY2x1ZGUgImZ0X3NzbC5oIgoKdm9pZAkJCXByaW50X3NoYTIyNF9mZDAodF9zc2wgKnNzbCkKewoJY2hhcgkJKmhhc2g7CgoJaGFzaCA9IHNoYTIyNF9zaXplKHNzbC0+bGluZSwgc3NsLT5zaXplX2xpbmUpOwoJaWYgKHNzbC0+YXJncyAmIEZMQUdfcCkKCQlmdF9wdXRzdHIoc3NsLT5saW5lKTsKCWZ0X3B1dGVuZGwoaGFzaCk7CglpZiAoc3RyY21wKCJFUlJPUiIsIGhhc2gpKQoJCWZ0X3N0cmRlbCgmaGFzaCk7Cn0KCnZvaWQJCQlwcmludF9zaGEyMjRfZmlsZShjb25zdCBjaGFyICpmaWxlLCBjb25zdCBzaG9ydCBmbGFncykKewoJaW50CQkJZmQ7CgljaGFyCQkqaGFzaDsKCglpZiAoKGZkID0gb3BlbihmaWxlLCBPX1JET05MWSkpIDwgMSkKCXsKCQlmdF9wcmludGYoInNoYTIyNDogJXM6IE5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnlcbiIsIGZpbGUpOwoJCXJldHVybiA7Cgl9CglpZiAoIShoYXNoID0gc2hhMjI0X2ZkKGZkKSkpCgkJaGFzaCA9ICJFUlJPUiI7CgljbG9zZShmZCk7CglpZiAoZmxhZ3MgJiBGTEFHX3EpCgkJZnRfcHV0ZW5kbChoYXNoKTsKCWVsc2UgaWYgKGZsYWdzICYgRkxBR19yKQoJCWZ0X3ByaW50ZigiJXMgJXNcbiIsIGhhc2gsIGZpbGUpOwoJZWxzZQoJCWZ0X3ByaW50ZigiU0hBMjI0ICglcykgPSAlc1xuIiwgZmlsZSwgaGFzaCk7CglpZiAoc3RyY21wKCJFUlJPUiIsIGhhc2gpKQoJCWZ0X3N0cmRlbCgmaGFzaCk7Cn0KCnZvaWQJCQlwcmludF9zaGEyMjQoY29uc3QgY2hhciAqbXNnLCBjb25zdCBzaG9ydCBmbGFncykKewoJY2hhcgkJKmhhc2g7CgoJaWYgKCEoaGFzaCA9IHNoYTIyNChtc2cpKSkKCQloYXNoID0gIkVSUk9SIjsKCWlmIChmbGFncyAmIEZMQUdfcSkKCQlmdF9wdXRlbmRsKGhhc2gpOwoJZWxzZSBpZiAoZmxhZ3MgJiBGTEFHX3IpCgkJZnRfcHJpbnRmKCIlcyBcIiVzXCJcbiIsIGhhc2gsIG1zZyk7CgllbHNlCgkJZnRfcHJpbnRmKCJTSEEyMjQgKFwiJXNcIikgPSAlc1xuIiwgbXNnLCBoYXNoKTsKCWlmIChzdHJjbXAoIkVSUk9SIiwgaGFzaCkpCgkJZnRfc3RyZGVsKCZoYXNoKTsKfQoKdm9pZAkJCWNvbXB1dGVfc2hhMjI0KHRfc3NsICpzc2wpCnsKCXNpemVfdAkJaTsKCglpID0gMDsKCWlmIChzc2wtPmFyZ3MgJiBGTEFHX3AgfHwgKCEoc3NsLT5hcmdzICYgRkxBR19zKSAmJiAhc3NsLT5maWxlcykpCgkJcmVhZF9maWxlKDAsIHNzbCk7CglpZiAoc3NsLT5hcmdzICYgRkxBR19zKQoJewoJCXdoaWxlIChzc2wtPm9wdC5hcmdzX3NbaV0pCgkJewoJCQlwcmludF9zaGEyMjQoc3NsLT5vcHQuYXJnc19zW2ldLCBzc2wtPmFyZ3MpOwoJCQlpKys7CgkJfQoJfQoJaSA9IDA7CglpZiAoc3NsLT5maWxlcykKCQl3aGlsZSAoc3NsLT5maWxlc1tpXSkKCQl7CgkJCXByaW50X3NoYTIyNF9maWxlKHNzbC0+ZmlsZXNbaV0sIHNzbC0+YXJncyk7CgkJCSsraTsKCQl9Cn0K
I2luY2x1ZGUgInNoYTI1Ni5oIgoKc3RhdGljIHZvaWQJCWluaXRfc2hhMjI0X3N0cnVjdCh0X3NoYTI1NiAqY3R4KQp7CglmdF9iemVybyhjdHgsIHNpemVvZih0X3NoYTI1NikpOwoJY3R4LT5oWzBdID0gMHhjMTA1OWVkODsKCWN0eC0+aFsxXSA9IDB4MzY3Y2Q1MDc7CgljdHgtPmhbMl0gPSAweDMwNzBkZDE3OwoJY3R4LT5oWzNdID0gMHhmNzBlNTkzOTsKCWN0eC0+aFs0XSA9IDB4ZmZjMDBiMzE7CgljdHgtPmhbNV0gPSAweDY4NTgxNTExOwoJY3R4LT5oWzZdID0gMHg2NGY5OGZhNzsKCWN0eC0+aFs3XSA9IDB4YmVmYTRmYTQ7Cn0KCnN0YXRpYyBjaGFyCQkqc2hhMjI0X2xhc3RfYmxvY2sodF9zaGEyNTYgKmN0eCwgY29uc3QgY2hhciAqbSwKCQl1aW50NjRfdCBsZW5ndGgsIGNoYXIgKnJlc3VsdCkKewoJY2hhcgkJYnVmZls2NF07Cgl1aW50NjRfdAliaXRfbGVuOwoKCWZ0X21lbWNweShidWZmLCBtLCBsZW5ndGgpOwoJYnVmZltsZW5ndGgrK10gPSAweDgwOwoJaWYgKGxlbmd0aCA+IDY0IC0gc2l6ZW9mKHVpbnQ2NF90KSkKCXsKCQlmdF9iemVybygmKGJ1ZmZbbGVuZ3RoXSksIDY0IC0gbGVuZ3RoKTsKCQlzaGEyNTZfYmxvY2soY3R4LCBidWZmKTsKCQlsZW5ndGggPSAwOwoJfQoJZnRfYnplcm8oJihidWZmW2xlbmd0aF0pLCA2NCAtIGxlbmd0aCk7CgliaXRfbGVuID0gY3R4LT5sICogODsKCWJ1ZmZbNTZdID0gYml0X2xlbiA+PiAweDM4ICYgMHhmZjsKCWJ1ZmZbNTddID0gYml0X2xlbiA+PiAweDMwICYgMHhmZjsKCWJ1ZmZbNThdID0gYml0X2xlbiA+PiAweDI4ICYgMHhmZjsKCWJ1ZmZbNTldID0gYml0X2xlbiA+PiAweDIwICYgMHhmZjsKCWJ1ZmZbNjBdID0gYml0X2xlbiA+PiAweDE4ICYgMHhmZjsKCWJ1ZmZbNjFdID0gYml0X2xlbiA+PiAweDEwICYgMHhmZjsKCWJ1ZmZbNjJdID0gYml0X2xlbiA+PiAweDA4ICYgMHhmZjsKCWJ1ZmZbNjNdID0gYml0X2xlbiA+PiAweDAwICYgMHhmZjsKCXNoYTI1Nl9ibG9jayhjdHgsIGJ1ZmYpOwoJcmVzdWx0ID0gc2hhMjU2X2hfdG9fc3RyaW5nKGN0eCwgcmVzdWx0KTsKCXJlc3VsdFs1Nl0gPSAnXDAnOwoJcmV0dXJuIChyZXN1bHQpOwp9CgpjaGFyCQkJKnNoYTIyNF9zaXplKGNvbnN0IGNoYXIgKm0sIHNpemVfdCBsZW5ndGgpCnsKCXRfc2hhMjU2CWN0eDsKCWNoYXIJCSpyZXN1bHQ7CgoJaWYgKCEocmVzdWx0ID0gKGNoYXIqKW1hbGxvYyg2NSkpKQoJCXJldHVybiAoTlVMTCk7Cglpbml0X3NoYTIyNF9zdHJ1Y3QoJmN0eCk7CgljdHgubCA9IGxlbmd0aDsKCXdoaWxlIChjdHgudG1wbCArIDY0IDw9IGN0eC5sKQoJewoJCXNoYTI1Nl9ibG9jaygmY3R4LCAmKG1bY3R4LnRtcGxdKSk7CgkJY3R4LnRtcGwgKz0gNjQ7Cgl9CglyZXR1cm4gKHNoYTIyNF9sYXN0X2Jsb2NrKCZjdHgsICYobVtjdHgudG1wbF0pLCBjdHgubCAtIGN0eC50bXBsLCByZXN1bHQpKTsKfQoKY2hhcgkJCSpzaGEyMjQoY29uc3QgY2hhciAqbSkKewoJdF9zaGEyNTYJY3R4OwoJY2hhcgkJKnJlc3VsdDsKCglpZiAoIShyZXN1bHQgPSAoY2hhciopbWFsbG9jKDY1KSkpCgkJcmV0dXJuIChOVUxMKTsKCWluaXRfc2hhMjI0X3N0cnVjdCgmY3R4KTsKCWN0eC5sID0gZnRfc3RybGVuKG0pOwoJd2hpbGUgKGN0eC50bXBsICsgNjQgPD0gY3R4LmwpCgl7CgkJc2hhMjU2X2Jsb2NrKCZjdHgsICYobVtjdHgudG1wbF0pKTsKCQljdHgudG1wbCArPSA2NDsKCX0KCXJldHVybiAoc2hhMjI0X2xhc3RfYmxvY2soJmN0eCwgJihtW2N0eC50bXBsXSksIGN0eC5sIC0gY3R4LnRtcGwsIHJlc3VsdCkpOwp9CgpjaGFyCQkJKnNoYTIyNF9mZChjb25zdCBpbnQgZmQpCnsKCXRfc2hhMjU2CWN0eDsKCWNoYXIJCSpyZXN1bHQ7CglpbnQJCQlyZXQ7CgljaGFyCQlidWZbNjRdOwoKCWlmICghKHJlc3VsdCA9IChjaGFyKiltYWxsb2MoNjUpKSkKCQlyZXR1cm4gKE5VTEwpOwoJaW5pdF9zaGEyMjRfc3RydWN0KCZjdHgpOwoJY3R4LmwgPSAwOwoJd2hpbGUgKChyZXQgPSByZWFkKGZkLCBidWYsIDY0KSkgPT0gNjQpCgl7CgkJc2hhMjU2X2Jsb2NrKCZjdHgsIGJ1Zik7CgkJY3R4LmwgKz0gNjQ7Cgl9CglpZiAocmV0ID09IC0xKQoJCXJldHVybiAoTlVMTCk7CgljdHgubCArPSByZXQ7CglyZXR1cm4gKHNoYTIyNF9sYXN0X2Jsb2NrKCZjdHgsIGJ1ZiwgcmV0LCByZXN1bHQpKTsKfQo=
I2luY2x1ZGUgImZ0X3NzbC5oIgoKdm9pZAkJCXByaW50X3NoYTI1Nl9mZDAodF9zc2wgKnNzbCkKewoJY2hhcgkJKmhhc2g7CgoJaGFzaCA9IHNoYTI1Nl9zaXplKHNzbC0+bGluZSwgc3NsLT5zaXplX2xpbmUpOwoJaWYgKHNzbC0+YXJncyAmIEZMQUdfcCkKCQlmdF9wdXRzdHIoc3NsLT5saW5lKTsKCWZ0X3B1dGVuZGwoaGFzaCk7CglpZiAoc3RyY21wKCJFUlJPUiIsIGhhc2gpKQoJCWZ0X3N0cmRlbCgmaGFzaCk7Cn0KCnZvaWQJCQlwcmludF9zaGEyNTZfZmlsZShjb25zdCBjaGFyICpmaWxlLCBjb25zdCBzaG9ydCBmbGFncykKewoJaW50CQkJZmQ7CgljaGFyCQkqaGFzaDsKCglpZiAoKGZkID0gb3BlbihmaWxlLCBPX1JET05MWSkpIDwgMSkKCXsKCQlmdF9wcmludGYoInNoYTI1NjogJXM6IE5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnlcbiIsIGZpbGUpOwoJCXJldHVybiA7Cgl9CglpZiAoIShoYXNoID0gc2hhMjU2X2ZkKGZkKSkpCgkJaGFzaCA9ICJFUlJPUiI7CgljbG9zZShmZCk7CglpZiAoZmxhZ3MgJiBGTEFHX3EpCgkJZnRfcHV0ZW5kbChoYXNoKTsKCWVsc2UgaWYgKGZsYWdzICYgRkxBR19yKQoJCWZ0X3ByaW50ZigiJXMgJXNcbiIsIGhhc2gsIGZpbGUpOwoJZWxzZQoJCWZ0X3ByaW50ZigiU0hBMjU2ICglcykgPSAlc1xuIiwgZmlsZSwgaGFzaCk7CglpZiAoc3RyY21wKCJFUlJPUiIsIGhhc2gpKQoJCWZ0X3N0cmRlbCgmaGFzaCk7Cn0KCnZvaWQJCQlwcmludF9zaGEyNTYoY29uc3QgY2hhciAqbXNnLCBjb25zdCBzaG9ydCBmbGFncykKewoJY2hhcgkJKmhhc2g7CgoJaWYgKCEoaGFzaCA9IHNoYTI1Nihtc2cpKSkKCQloYXNoID0gIkVSUk9SIjsKCWlmIChmbGFncyAmIEZMQUdfcSkKCQlmdF9wdXRlbmRsKGhhc2gpOwoJZWxzZSBpZiAoZmxhZ3MgJiBGTEFHX3IpCgkJZnRfcHJpbnRmKCIlcyBcIiVzXCJcbiIsIGhhc2gsIG1zZyk7CgllbHNlCgkJZnRfcHJpbnRmKCJTSEEyNTYgKFwiJXNcIikgPSAlc1xuIiwgbXNnLCBoYXNoKTsKCWlmIChzdHJjbXAoIkVSUk9SIiwgaGFzaCkpCgkJZnRfc3RyZGVsKCZoYXNoKTsKfQoKdm9pZAkJCWNvbXB1dGVfc2hhMjU2KHRfc3NsICpzc2wpCnsKCXNpemVfdAkJaTsKCglpID0gMDsKCWlmIChzc2wtPmFyZ3MgJiBGTEFHX3AgfHwgKCEoc3NsLT5hcmdzICYgRkxBR19zKSAmJiAhc3NsLT5maWxlcykpCgkJcmVhZF9maWxlKDAsIHNzbCk7CglpZiAoc3NsLT5hcmdzICYgRkxBR19zKQoJewoJCXdoaWxlIChzc2wtPm9wdC5hcmdzX3NbaV0pCgkJewoJCQlwcmludF9zaGEyNTYoc3NsLT5vcHQuYXJnc19zW2ldLCBzc2wtPmFyZ3MpOwoJCQlpKys7CgkJfQoJfQoJaSA9IDA7CglpZiAoc3NsLT5maWxlcykKCQl3aGlsZSAoc3NsLT5maWxlc1tpXSkKCQl7CgkJCXByaW50X3NoYTI1Nl9maWxlKHNzbC0+ZmlsZXNbaV0sIHNzbC0+YXJncyk7CgkJCSsraTsKCQl9Cn0K
I2luY2x1ZGUgInNoYTI1Ni5oIgoKY29uc3QgdWludDMyX3QJCWdfc2hhMjU2X2tbNjRdID0gewoJMHg0MjhhMmY5OCwgMHg3MTM3NDQ5MSwgMHhiNWMwZmJjZiwgMHhlOWI1ZGJhNSwgMHgzOTU2YzI1YiwgMHg1OWYxMTFmMSwKCTB4OTIzZjgyYTQsIDB4YWIxYzVlZDUsIDB4ZDgwN2FhOTgsIDB4MTI4MzViMDEsIDB4MjQzMTg1YmUsIDB4NTUwYzdkYzMsCgkweDcyYmU1ZDc0LCAweDgwZGViMWZlLCAweDliZGMwNmE3LCAweGMxOWJmMTc0LCAweGU0OWI2OWMxLCAweGVmYmU0Nzg2LAoJMHgwZmMxOWRjNiwgMHgyNDBjYTFjYywgMHgyZGU5MmM2ZiwgMHg0YTc0ODRhYSwgMHg1Y2IwYTlkYywgMHg3NmY5ODhkYSwKCTB4OTgzZTUxNTIsIDB4YTgzMWM2NmQsIDB4YjAwMzI3YzgsIDB4YmY1OTdmYzcsIDB4YzZlMDBiZjMsIDB4ZDVhNzkxNDcsCgkweDA2Y2E2MzUxLCAweDE0MjkyOTY3LCAweDI3YjcwYTg1LCAweDJlMWIyMTM4LCAweDRkMmM2ZGZjLCAweDUzMzgwZDEzLAoJMHg2NTBhNzM1NCwgMHg3NjZhMGFiYiwgMHg4MWMyYzkyZSwgMHg5MjcyMmM4NSwgMHhhMmJmZThhMSwgMHhhODFhNjY0YiwKCTB4YzI0YjhiNzAsIDB4Yzc2YzUxYTMsIDB4ZDE5MmU4MTksIDB4ZDY5OTA2MjQsIDB4ZjQwZTM1ODUsIDB4MTA2YWEwNzAsCgkweDE5YTRjMTE2LCAweDFlMzc2YzA4LCAweDI3NDg3NzRjLCAweDM0YjBiY2I1LCAweDM5MWMwY2IzLCAweDRlZDhhYTRhLAoJMHg1YjljY2E0ZiwgMHg2ODJlNmZmMywgMHg3NDhmODJlZSwgMHg3OGE1NjM2ZiwgMHg4NGM4NzgxNCwgMHg4Y2M3MDIwOCwKCTB4OTBiZWZmZmEsIDB4YTQ1MDZjZWIsIDB4YmVmOWEzZjcsIDB4YzY3MTc4ZjIKfTsKCi8qCioqIHIgPSByb3RyCioqIGMgPSBjaAoqKiBtID0gbWFqCioqIEUgPSBzaWdtYV9tYWpfMQoqKiBlID0gc2lnbWFfbWFqXzAKKiogUyA9IHNpZ21hX21pbl8xCioqIHMgPSBzaWdtYV9taW5fMAoqLwoKc3RhdGljIHRfd29yZAkJZnVuKHRfd29yZCB4LCB0X3dvcmQgeSwgdF93b3JkIHosIGNoYXIgaWQpCnsKCWlmIChpZCA9PSAncicpCgkJcmV0dXJuICgoeCA+PiB5KSB8ICh4IDw8ICgzMiAtIHkpKSk7CglpZiAoaWQgPT0gJ2MnKQoJCXJldHVybiAoKHggJiB5KSBeICh+eCAmIHopKTsKCWlmIChpZCA9PSAnbScpCgkJcmV0dXJuICgoeCAmIHkpIF4gKHggJiB6KSBeICh5ICYgeikpOwoJaWYgKGlkID09ICdFJykKCQlyZXR1cm4gKGZ1bih4LCA2LCAwLCAncicpIF4gZnVuKHgsIDExLCAwLCAncicpIF4gZnVuKHgsIDI1LCAwLCAncicpKTsKCWlmIChpZCA9PSAnZScpCgkJcmV0dXJuIChmdW4oeCwgMiwgMCwgJ3InKSBeIGZ1bih4LCAxMywgMCwgJ3InKSBeIGZ1bih4LCAyMiwgMCwgJ3InKSk7CglpZiAoaWQgPT0gJ1MnKQoJCXJldHVybiAoZnVuKHgsIDE3LCAwLCAncicpIF4gZnVuKHgsIDE5LCAwLCAncicpIF4gKHggPj4gMTApKTsKCWlmIChpZCA9PSAncycpCgkJcmV0dXJuIChmdW4oeCwgNywgMCwgJ3InKSBeIGZ1bih4LCAxOCwgMCwgJ3InKSBeICh4ID4+IDMpKTsKCXJldHVybiAoMCk7Cn0KCnN0YXRpYyB2b2lkCQkJZnVsbGZpbF93KHRfd29yZCB3WzY0XSwgY29uc3QgY2hhciBtWzY0XSkKewoJaW50CQkJCWk7CgoJaSA9IC0xOwoJd2hpbGUgKCsraSA8IDE2KQoJewoJCXdbaV0gPSAoKG1baSAqIDQgKyAwXSA8PCAyNCkgJiAweGZmMDAwMDAwKQoJCQkJfCAoKG1baSAqIDQgKyAxXSA8PCAxNikgJiAweDAwZmYwMDAwKQoJCQkJfCAoKG1baSAqIDQgKyAyXSA8PCA4KSAmIDB4MDAwMGZmMDApCgkJCQl8IChtW2kgKiA0ICsgM10gJiAweDAwMDAwMGZmKTsKCX0KCWkgPSAxNTsKCXdoaWxlICgrK2kgPCA2NCkKCXsKCQl3W2ldID0gZnVuKHdbaSAtIDJdLCAwLCAwLCAnUycpICsgd1tpIC0gN10KCQkJCSsgZnVuKHdbaSAtIDE1XSwgMCwgMCwgJ3MnKSArIHdbaSAtIDE2XTsKCX0KfQoKc3RhdGljIHZvaWQJCQljb21wdXRlX2hfY29weSh0X3dvcmQgaFs4XSwgdF93b3JkIHdbNjRdKQp7CglpbnQJCQkJaTsKCXRfd29yZAkJCXQxOwoJdF93b3JkCQkJdDI7CgoJaSA9IC0xOwoJd2hpbGUgKCsraSA8IDY0KQoJewoJCXQxID0gaFs3XSArIGZ1bihoWzRdLCAwLCAwLCAnRScpICsgZnVuKGhbNF0sIGhbNV0sIGhbNl0sICdjJykKCQkJCSsgZ19zaGEyNTZfa1tpXSArIHdbaV07CgkJdDIgPSBmdW4oaFswXSwgMCwgMCwgJ2UnKSArIGZ1bihoWzBdLCBoWzFdLCBoWzJdLCAnbScpOwoJCWhbN10gPSBoWzZdOwoJCWhbNl0gPSBoWzVdOwoJCWhbNV0gPSBoWzRdOwoJCWhbNF0gPSBoWzNdICsgdDE7CgkJaFszXSA9IGhbMl07CgkJaFsyXSA9IGhbMV07CgkJaFsxXSA9IGhbMF07CgkJaFswXSA9IHQxICsgdDI7Cgl9Cn0KCnZvaWQJCQkJc2hhMjU2X2Jsb2NrKHRfc2hhMjU2ICpjdHgsIGNvbnN0IGNoYXIgbVs2NF0pCnsKCXRfd29yZAkJCXdbNjRdOwoJdF93b3JkCQkJaF9jb3B5WzhdOwoKCWZ1bGxmaWxfdyh3LCBtKTsKCW1lbWNweShoX2NvcHksIGN0eC0+aCwgc2l6ZW9mKHVpbnQzMl90KSAqIDgpOwoJY29tcHV0ZV9oX2NvcHkoaF9jb3B5LCB3KTsKCWN0eC0+aFswXSArPSBoX2NvcHlbMF07CgljdHgtPmhbMV0gKz0gaF9jb3B5WzFdOwoJY3R4LT5oWzJdICs9IGhfY29weVsyXTsKCWN0eC0+aFszXSArPSBoX2NvcHlbM107CgljdHgtPmhbNF0gKz0gaF9jb3B5WzRdOwoJY3R4LT5oWzVdICs9IGhfY29weVs1XTsKCWN0eC0+aFs2XSArPSBoX2NvcHlbNl07CgljdHgtPmhbN10gKz0gaF9jb3B5WzddOwp9Cg==
I2luY2x1ZGUgInNoYTI1Ni5oIgoKc3RhdGljIHZvaWQJCWluaXRfc2hhMjU2X3N0cnVjdCh0X3NoYTI1NiAqY3R4KQp7CglmdF9iemVybyhjdHgsIHNpemVvZih0X3NoYTI1NikpOwoJY3R4LT5oWzBdID0gMHg2YTA5ZTY2NzsKCWN0eC0+aFsxXSA9IDB4YmI2N2FlODU7CgljdHgtPmhbMl0gPSAweDNjNmVmMzcyOwoJY3R4LT5oWzNdID0gMHhhNTRmZjUzYTsKCWN0eC0+aFs0XSA9IDB4NTEwZTUyN2Y7CgljdHgtPmhbNV0gPSAweDliMDU2ODhjOwoJY3R4LT5oWzZdID0gMHgxZjgzZDlhYjsKCWN0eC0+aFs3XSA9IDB4NWJlMGNkMTk7Cn0KCnN0YXRpYyBjaGFyCQkqc2hhMjU2X2xhc3RfYmxvY2sodF9zaGEyNTYgKmN0eCwgY29uc3QgY2hhciAqbSwKCQl1aW50NjRfdCBsZW5ndGgsIGNoYXIgKnJlc3VsdCkKewoJY2hhcgkJYnVmZls2NF07Cgl1aW50NjRfdAliaXRfbGVuOwoKCWZ0X21lbWNweShidWZmLCBtLCBsZW5ndGgpOwoJYnVmZltsZW5ndGgrK10gPSAweDgwOwoJaWYgKGxlbmd0aCA+IDY0IC0gc2l6ZW9mKHVpbnQ2NF90KSkKCXsKCQlmdF9iemVybygmKGJ1ZmZbbGVuZ3RoXSksIDY0IC0gbGVuZ3RoKTsKCQlzaGEyNTZfYmxvY2soY3R4LCBidWZmKTsKCQlsZW5ndGggPSAwOwoJfQoJZnRfYnplcm8oJihidWZmW2xlbmd0aF0pLCA2NCAtIGxlbmd0aCk7CgliaXRfbGVuID0gY3R4LT5sICogODsKCWJ1ZmZbNTZdID0gYml0X2xlbiA+PiAweDM4ICYgMHhmZjsKCWJ1ZmZbNTddID0gYml0X2xlbiA+PiAweDMwICYgMHhmZjsKCWJ1ZmZbNThdID0gYml0X2xlbiA+PiAweDI4ICYgMHhmZjsKCWJ1ZmZbNTldID0gYml0X2xlbiA+PiAweDIwICYgMHhmZjsKCWJ1ZmZbNjBdID0gYml0X2xlbiA+PiAweDE4ICYgMHhmZjsKCWJ1ZmZbNjFdID0gYml0X2xlbiA+PiAweDEwICYgMHhmZjsKCWJ1ZmZbNjJdID0gYml0X2xlbiA+PiAweDA4ICYgMHhmZjsKCWJ1ZmZbNjNdID0gYml0X2xlbiA+PiAweDAwICYgMHhmZjsKCXNoYTI1Nl9ibG9jayhjdHgsIGJ1ZmYpOwoJcmV0dXJuIChzaGEyNTZfaF90b19zdHJpbmcoY3R4LCByZXN1bHQpKTsKfQoKY2hhcgkJCSpzaGEyNTZfc2l6ZShjb25zdCBjaGFyICptLCBzaXplX3QgbGVuZ3RoKQp7Cgl0X3NoYTI1NgljdHg7CgljaGFyCQkqcmVzdWx0OwoKCWlmICghKHJlc3VsdCA9IChjaGFyKiltYWxsb2MoNjUpKSkKCQlyZXR1cm4gKE5VTEwpOwoJaW5pdF9zaGEyNTZfc3RydWN0KCZjdHgpOwoJY3R4LmwgPSBsZW5ndGg7Cgl3aGlsZSAoY3R4LnRtcGwgKyA2NCA8PSBjdHgubCkKCXsKCQlzaGEyNTZfYmxvY2soJmN0eCwgJihtW2N0eC50bXBsXSkpOwoJCWN0eC50bXBsICs9IDY0OwoJfQoJcmV0dXJuIChzaGEyNTZfbGFzdF9ibG9jaygmY3R4LCAmKG1bY3R4LnRtcGxdKSwgY3R4LmwgLSBjdHgudG1wbCwgcmVzdWx0KSk7Cn0KCmNoYXIJCQkqc2hhMjU2KGNvbnN0IGNoYXIgKm0pCnsKCXRfc2hhMjU2CWN0eDsKCWNoYXIJCSpyZXN1bHQ7CgoJaWYgKCEocmVzdWx0ID0gKGNoYXIqKW1hbGxvYyg2NSkpKQoJCXJldHVybiAoTlVMTCk7Cglpbml0X3NoYTI1Nl9zdHJ1Y3QoJmN0eCk7CgljdHgubCA9IGZ0X3N0cmxlbihtKTsKCXdoaWxlIChjdHgudG1wbCArIDY0IDw9IGN0eC5sKQoJewoJCXNoYTI1Nl9ibG9jaygmY3R4LCAmKG1bY3R4LnRtcGxdKSk7CgkJY3R4LnRtcGwgKz0gNjQ7Cgl9CglyZXR1cm4gKHNoYTI1Nl9sYXN0X2Jsb2NrKCZjdHgsICYobVtjdHgudG1wbF0pLCBjdHgubCAtIGN0eC50bXBsLCByZXN1bHQpKTsKfQoKY2hhcgkJCSpzaGEyNTZfZmQoY29uc3QgaW50IGZkKQp7Cgl0X3NoYTI1NgljdHg7CgljaGFyCQkqcmVzdWx0OwoJaW50CQkJcmV0OwoJY2hhcgkJYnVmWzY0XTsKCglpZiAoIShyZXN1bHQgPSAoY2hhciopbWFsbG9jKDY1KSkpCgkJcmV0dXJuIChOVUxMKTsKCWluaXRfc2hhMjU2X3N0cnVjdCgmY3R4KTsKCWN0eC5sID0gMDsKCXdoaWxlICgocmV0ID0gcmVhZChmZCwgYnVmLCA2NCkpID09IDY0KQoJewoJCXNoYTI1Nl9ibG9jaygmY3R4LCBidWYpOwoJCWN0eC5sICs9IDY0OwoJfQoJaWYgKHJldCA9PSAtMSkKCQlyZXR1cm4gKE5VTEwpOwoJY3R4LmwgKz0gcmV0OwoJcmV0dXJuIChzaGEyNTZfbGFzdF9ibG9jaygmY3R4LCBidWYsIHJldCwgcmVzdWx0KSk7Cn0K
I2luY2x1ZGUgInNoYTI1Ni5oIgoKc3RhdGljIGNoYXIJCSpmdF91dG9hX2Jhc2Vfc2hhMjU2KHVpbnQzMl90IG5iLCBjaGFyICpyZXMpCnsKCXJlc1swXSA9IEJBU0VbbmIgPj4gMjggJiAweGZdOwoJcmVzWzFdID0gQkFTRVtuYiA+PiAyNCAmIDB4Zl07CglyZXNbMl0gPSBCQVNFW25iID4+IDIwICYgMHhmXTsKCXJlc1szXSA9IEJBU0VbbmIgPj4gMTYgJiAweGZdOwoJcmVzWzRdID0gQkFTRVtuYiA+PiAxMiAmIDB4Zl07CglyZXNbNV0gPSBCQVNFW25iID4+IDggJiAweGZdOwoJcmVzWzZdID0gQkFTRVtuYiA+PiA0ICYgMHhmXTsKCXJlc1s3XSA9IEJBU0VbbmIgPj4gMCAmIDB4Zl07CglyZXR1cm4gKHJlcyk7Cn0KCmNoYXIJCQkqc2hhMjU2X2hfdG9fc3RyaW5nKHRfc2hhMjU2ICpjdHgsIGNoYXIgKnJlc3VsdCkKewoJaW50CQkJaTsKCglpID0gLTE7CglmdF9tZW1zZXQocmVzdWx0LCAnMCcsIDY0KTsKCXdoaWxlICgrK2kgPCA4KQoJCWZ0X3V0b2FfYmFzZV9zaGEyNTYoY3R4LT5oW2ldLCAmKHJlc3VsdFtpICogOF0pKTsKCXJlc3VsdFs2NF0gPSAnXDAnOwoJcmV0dXJuIChyZXN1bHQpOwp9Cg==
I2luY2x1ZGUgInNoYTI1Ni5oIgoKCnVpbnQzMl90CXJvdHJuKHVpbnQzMl90IHgsIHVpbnQzMl90IG4pCnsKCXJldHVybiAoKHggPj4gbikgfCAoeCA8PCAoMzIgLSBuKSkpOwp9Cgp1aW50MzJfdAljaCh1aW50MzJfdCB4LCB1aW50MzJfdCB5LCB1aW50MzJfdCB6KQp7CglyZXR1cm4gKCh4ICYgeSkgXiAofnggJiB6KSk7Cn0KCnVpbnQzMl90CW1haih1aW50MzJfdCB4LCB1aW50MzJfdCB5LCB1aW50MzJfdCB6KQp7CglyZXR1cm4gKCh4ICYgeSkgXiAoeCAmIHopIF4gKHkgJiB6KSk7Cn0KCnVpbnQzMl90CXNpZ21hX21haih1aW50MzJfdCB4LCB1aW50MzJfdCBuKQp7CglpZiAobiA9PSAwKQoJCXJldHVybiAocm90cm4oeCwgMikgXiByb3Rybih4LCAxMykgXiByb3Rybih4LCAyMikpOwoJcmV0dXJuIChyb3Rybih4LCA2KSBeIHJvdHJuKHgsIDExKSBeIHJvdHJuKHgsIDI1KSk7Cn0KCnVpbnQzMl90CXNpZ21hX21pbih1aW50MzJfdCB4LCB1aW50MzJfdCBuKQp7CglpZiAobiA9PSAwKQoJCXJldHVybiAocm90cm4oeCwgNykgXiByb3Rybih4LCAxOCkgXiAoeCA+PiAzKSk7CglyZXR1cm4gKHJvdHJuKHgsIDE3KSBeIHJvdHJuKHgsIDE5KSBeICh4ID4+IDEwKSk7Cn0K
I2luY2x1ZGUgImZ0X3NzbC5oIgoKdm9pZAkJCXByaW50X3NoYTM4NF9mZDAodF9zc2wgKnNzbCkKewoJY2hhcgkJKmhhc2g7CgoJaGFzaCA9IHNoYTM4NF9zaXplKHNzbC0+bGluZSwgc3NsLT5zaXplX2xpbmUpOwoJaWYgKHNzbC0+YXJncyAmIEZMQUdfcCkKCQlmdF9wdXRzdHIoc3NsLT5saW5lKTsKCWZ0X3B1dGVuZGwoaGFzaCk7CglpZiAoc3RyY21wKCJFUlJPUiIsIGhhc2gpKQoJCWZ0X3N0cmRlbCgmaGFzaCk7Cn0KCnZvaWQJCQlwcmludF9zaGEzODRfZmlsZShjb25zdCBjaGFyICpmaWxlLCBjb25zdCBzaG9ydCBmbGFncykKewoJaW50CQkJZmQ7CgljaGFyCQkqaGFzaDsKCglpZiAoKGZkID0gb3BlbihmaWxlLCBPX1JET05MWSkpIDwgMSkKCXsKCQlmdF9wcmludGYoInNoYTM4NDogJXM6IE5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnlcbiIsIGZpbGUpOwoJCXJldHVybiA7Cgl9CglpZiAoIShoYXNoID0gc2hhMzg0X2ZkKGZkKSkpCgkJaGFzaCA9ICJFUlJPUiI7CgljbG9zZShmZCk7CglpZiAoZmxhZ3MgJiBGTEFHX3EpCgkJZnRfcHV0ZW5kbChoYXNoKTsKCWVsc2UgaWYgKGZsYWdzICYgRkxBR19yKQoJCWZ0X3ByaW50ZigiJXMgJXNcbiIsIGhhc2gsIGZpbGUpOwoJZWxzZQoJCWZ0X3ByaW50ZigiU0hBMzg0ICglcykgPSAlc1xuIiwgZmlsZSwgaGFzaCk7CglpZiAoc3RyY21wKCJFUlJPUiIsIGhhc2gpKQoJCWZ0X3N0cmRlbCgmaGFzaCk7Cn0KCnZvaWQJCQlwcmludF9zaGEzODQoY29uc3QgY2hhciAqbXNnLCBjb25zdCBzaG9ydCBmbGFncykKewoJY2hhcgkJKmhhc2g7CgoJaWYgKCEoaGFzaCA9IHNoYTM4NChtc2cpKSkKCQloYXNoID0gIkVSUk9SIjsKCWlmIChmbGFncyAmIEZMQUdfcSkKCQlmdF9wdXRlbmRsKGhhc2gpOwoJZWxzZSBpZiAoZmxhZ3MgJiBGTEFHX3IpCgkJZnRfcHJpbnRmKCIlcyBcIiVzXCJcbiIsIGhhc2gsIG1zZyk7CgllbHNlCgkJZnRfcHJpbnRmKCJTSEEzODQgKFwiJXNcIikgPSAlc1xuIiwgbXNnLCBoYXNoKTsKCWlmIChzdHJjbXAoIkVSUk9SIiwgaGFzaCkpCgkJZnRfc3RyZGVsKCZoYXNoKTsKfQoKdm9pZAkJCWNvbXB1dGVfc2hhMzg0KHRfc3NsICpzc2wpCnsKCXNpemVfdAkJaTsKCglpID0gMDsKCWlmIChzc2wtPmFyZ3MgJiBGTEFHX3AgfHwgKCEoc3NsLT5hcmdzICYgRkxBR19zKSAmJiAhc3NsLT5maWxlcykpCgkJcmVhZF9maWxlKDAsIHNzbCk7CglpZiAoc3NsLT5hcmdzICYgRkxBR19zKQoJewoJCXdoaWxlIChzc2wtPm9wdC5hcmdzX3NbaV0pCgkJewoJCQlwcmludF9zaGEzODQoc3NsLT5vcHQuYXJnc19zW2ldLCBzc2wtPmFyZ3MpOwoJCQlpKys7CgkJfQoJfQoJaSA9IDA7CglpZiAoc3NsLT5maWxlcykKCQl3aGlsZSAoc3NsLT5maWxlc1tpXSkKCQl7CgkJCXByaW50X3NoYTM4NF9maWxlKHNzbC0+ZmlsZXNbaV0sIHNzbC0+YXJncyk7CgkJCSsraTsKCQl9Cn0K
I2luY2x1ZGUgInNoYTUxMi5oIgoKc3RhdGljIHZvaWQJCWluaXRfc2hhMzg0X3N0cnVjdCh0X3NoYTUxMiAqY3R4KQp7CglmdF9iemVybyhjdHgsIHNpemVvZih0X3NoYTUxMikpOwoJY3R4LT5oWzBdID0gMHhDQkJCOUQ1REMxMDU5RUQ4OwoJY3R4LT5oWzFdID0gMHg2MjlBMjkyQTM2N0NENTA3OwoJY3R4LT5oWzJdID0gMHg5MTU5MDE1QTMwNzBERDE3OwoJY3R4LT5oWzNdID0gMHgxNTJGRUNEOEY3MEU1OTM5OwoJY3R4LT5oWzRdID0gMHg2NzMzMjY2N0ZGQzAwQjMxOwoJY3R4LT5oWzVdID0gMHg4RUI0NEE4NzY4NTgxNTExOwoJY3R4LT5oWzZdID0gMHhEQjBDMkUwRDY0Rjk4RkE3OwoJY3R4LT5oWzddID0gMHg0N0I1NDgxREJFRkE0RkE0Owp9CgpzdGF0aWMgY2hhcgkJKnNoYTM4NF9sYXN0X2Jsb2NrKHRfc2hhNTEyICpjdHgsIGNvbnN0IGNoYXIgKm0sCgkJdWludDY0X3QgbGVuZ3RoLCBjaGFyICpyZXN1bHQpCnsKCWNoYXIJCWJ1ZmZbMTI4XTsKCXVpbnQ2NF90CWJpdF9sZW47CgoJZnRfbWVtY3B5KGJ1ZmYsIG0sIGxlbmd0aCk7CglidWZmW2xlbmd0aCsrXSA9IDB4ODA7CglpZiAobGVuZ3RoID4gMTI4IC0gMTYpCgl7CgkJZnRfYnplcm8oJihidWZmW2xlbmd0aF0pLCAxMjggLSBsZW5ndGgpOwoJCXNoYTUxMl9ibG9jayhjdHgsIGJ1ZmYpOwoJCWxlbmd0aCA9IDA7Cgl9CglmdF9iemVybygmKGJ1ZmZbbGVuZ3RoXSksIDEyOCAtIGxlbmd0aCk7CgliaXRfbGVuID0gY3R4LT5sICogODsKCWJ1ZmZbMTIwXSA9IGJpdF9sZW4gPj4gMHgzOCAmIDB4ZmY7CglidWZmWzEyMV0gPSBiaXRfbGVuID4+IDB4MzAgJiAweGZmOwoJYnVmZlsxMjJdID0gYml0X2xlbiA+PiAweDI4ICYgMHhmZjsKCWJ1ZmZbMTIzXSA9IGJpdF9sZW4gPj4gMHgyMCAmIDB4ZmY7CglidWZmWzEyNF0gPSBiaXRfbGVuID4+IDB4MTggJiAweGZmOwoJYnVmZlsxMjVdID0gYml0X2xlbiA+PiAweDEwICYgMHhmZjsKCWJ1ZmZbMTI2XSA9IGJpdF9sZW4gPj4gMHgwOCAmIDB4ZmY7CglidWZmWzEyN10gPSBiaXRfbGVuID4+IDB4MDAgJiAweGZmOwoJc2hhNTEyX2Jsb2NrKGN0eCwgYnVmZik7CglyZXN1bHQgPSBzaGE1MTJfaF90b19zdHJpbmcoY3R4LCByZXN1bHQpOwoJcmVzdWx0Wzk2XSA9ICdcMCc7CglyZXR1cm4gKHJlc3VsdCk7Cn0KCmNoYXIJCQkqc2hhMzg0X3NpemUoY29uc3QgY2hhciAqbSwgc2l6ZV90IGxlbmd0aCkKewoJdF9zaGE1MTIJY3R4OwoJY2hhcgkJKnJlc3VsdDsKCglpZiAoIShyZXN1bHQgPSAoY2hhciopbWFsbG9jKDEyOSkpKQoJCXJldHVybiAoTlVMTCk7Cglpbml0X3NoYTM4NF9zdHJ1Y3QoJmN0eCk7CgljdHgubCA9IGxlbmd0aDsKCXdoaWxlIChjdHgudG1wbCArIDEyOCA8PSBjdHgubCkKCXsKCQlzaGE1MTJfYmxvY2soJmN0eCwgJihtW2N0eC50bXBsXSkpOwoJCWN0eC50bXBsICs9IDEyODsKCX0KCXJldHVybiAoc2hhMzg0X2xhc3RfYmxvY2soJmN0eCwgJihtW2N0eC50bXBsXSksIGN0eC5sIC0gY3R4LnRtcGwsIHJlc3VsdCkpOwp9CgpjaGFyCQkJKnNoYTM4NChjb25zdCBjaGFyICptKQp7Cgl0X3NoYTUxMgljdHg7CgljaGFyCQkqcmVzdWx0OwoKCWlmICghKHJlc3VsdCA9IChjaGFyKiltYWxsb2MoMTI5KSkpCgkJcmV0dXJuIChOVUxMKTsKCWluaXRfc2hhMzg0X3N0cnVjdCgmY3R4KTsKCWN0eC5sID0gZnRfc3RybGVuKG0pOwoJd2hpbGUgKGN0eC50bXBsICsgMTI4IDw9IGN0eC5sKQoJewoJCXNoYTUxMl9ibG9jaygmY3R4LCAmKG1bY3R4LnRtcGxdKSk7CgkJY3R4LnRtcGwgKz0gMTI4OwoJfQoJcmV0dXJuIChzaGEzODRfbGFzdF9ibG9jaygmY3R4LCAmKG1bY3R4LnRtcGxdKSwgY3R4LmwgLSBjdHgudG1wbCwgcmVzdWx0KSk7Cn0KCmNoYXIJCQkqc2hhMzg0X2ZkKGNvbnN0IGludCBmZCkKewoJdF9zaGE1MTIJY3R4OwoJY2hhcgkJKnJlc3VsdDsKCWludAkJCXJldDsKCWNoYXIJCWJ1ZlsxMjhdOwoKCWlmICghKHJlc3VsdCA9IChjaGFyKiltYWxsb2MoMTI5KSkpCgkJcmV0dXJuIChOVUxMKTsKCWluaXRfc2hhMzg0X3N0cnVjdCgmY3R4KTsKCWN0eC5sID0gMDsKCXdoaWxlICgocmV0ID0gcmVhZChmZCwgYnVmLCAxMjgpKSA9PSAxMjgpCgl7CgkJc2hhNTEyX2Jsb2NrKCZjdHgsIGJ1Zik7CgkJY3R4LmwgKz0gMTI4OwoJfQoJaWYgKHJldCA9PSAtMSkKCQlyZXR1cm4gKE5VTEwpOwoJY3R4LmwgKz0gcmV0OwoJcmV0dXJuIChzaGEzODRfbGFzdF9ibG9jaygmY3R4LCBidWYsIHJldCwgcmVzdWx0KSk7Cn0=
I2luY2x1ZGUgImZ0X3NzbC5oIgoKdm9pZAkJCXByaW50X3NoYTUxMl9mZDAodF9zc2wgKnNzbCkKewoJY2hhcgkJKmhhc2g7CgoJaGFzaCA9IHNoYTUxMl9zaXplKHNzbC0+bGluZSwgc3NsLT5zaXplX2xpbmUpOwoJaWYgKHNzbC0+YXJncyAmIEZMQUdfcCkKCQlmdF9wdXRzdHIoc3NsLT5saW5lKTsKCWZ0X3B1dGVuZGwoaGFzaCk7CglpZiAoc3RyY21wKCJFUlJPUiIsIGhhc2gpKQoJCWZ0X3N0cmRlbCgmaGFzaCk7Cn0KCnZvaWQJCQlwcmludF9zaGE1MTJfZmlsZShjb25zdCBjaGFyICpmaWxlLCBjb25zdCBzaG9ydCBmbGFncykKewoJaW50CQkJZmQ7CgljaGFyCQkqaGFzaDsKCglpZiAoKGZkID0gb3BlbihmaWxlLCBPX1JET05MWSkpIDwgMSkKCXsKCQlmdF9wcmludGYoInNoYTUxMjogJXM6IE5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnlcbiIsIGZpbGUpOwoJCXJldHVybiA7Cgl9CglpZiAoIShoYXNoID0gc2hhNTEyX2ZkKGZkKSkpCgkJaGFzaCA9ICJFUlJPUiI7CgljbG9zZShmZCk7CglpZiAoZmxhZ3MgJiBGTEFHX3EpCgkJZnRfcHV0ZW5kbChoYXNoKTsKCWVsc2UgaWYgKGZsYWdzICYgRkxBR19yKQoJCWZ0X3ByaW50ZigiJXMgJXNcbiIsIGhhc2gsIGZpbGUpOwoJZWxzZQoJCWZ0X3ByaW50ZigiU0hBNTEyICglcykgPSAlc1xuIiwgZmlsZSwgaGFzaCk7CglpZiAoc3RyY21wKCJFUlJPUiIsIGhhc2gpKQoJCWZ0X3N0cmRlbCgmaGFzaCk7Cn0KCnZvaWQJCQlwcmludF9zaGE1MTIoY29uc3QgY2hhciAqbXNnLCBjb25zdCBzaG9ydCBmbGFncykKewoJY2hhcgkJKmhhc2g7CgoJaWYgKCEoaGFzaCA9IHNoYTUxMihtc2cpKSkKCQloYXNoID0gIkVSUk9SIjsKCWlmIChmbGFncyAmIEZMQUdfcSkKCQlmdF9wdXRlbmRsKGhhc2gpOwoJZWxzZSBpZiAoZmxhZ3MgJiBGTEFHX3IpCgkJZnRfcHJpbnRmKCIlcyBcIiVzXCJcbiIsIGhhc2gsIG1zZyk7CgllbHNlCgkJZnRfcHJpbnRmKCJTSEE1MTIgKFwiJXNcIikgPSAlc1xuIiwgbXNnLCBoYXNoKTsKCWlmIChzdHJjbXAoIkVSUk9SIiwgaGFzaCkpCgkJZnRfc3RyZGVsKCZoYXNoKTsKfQoKdm9pZAkJCWNvbXB1dGVfc2hhNTEyKHRfc3NsICpzc2wpCnsKCXNpemVfdAkJaTsKCglpID0gMDsKCWlmIChzc2wtPmFyZ3MgJiBGTEFHX3AgfHwgKCEoc3NsLT5hcmdzICYgRkxBR19zKSAmJiAhc3NsLT5maWxlcykpCgkJcmVhZF9maWxlKDAsIHNzbCk7CglpZiAoc3NsLT5hcmdzICYgRkxBR19zKQoJewoJCXdoaWxlIChzc2wtPm9wdC5hcmdzX3NbaV0pCgkJewoJCQlwcmludF9zaGE1MTIoc3NsLT5vcHQuYXJnc19zW2ldLCBzc2wtPmFyZ3MpOwoJCQlpKys7CgkJfQoJfQoJaSA9IDA7CglpZiAoc3NsLT5maWxlcykKCQl3aGlsZSAoc3NsLT5maWxlc1tpXSkKCQl7CgkJCXByaW50X3NoYTUxMl9maWxlKHNzbC0+ZmlsZXNbaV0sIHNzbC0+YXJncyk7CgkJCSsraTsKCQl9Cn0K
I2luY2x1ZGUgInNoYTUxMi5oIgoKY29uc3QgdF93b3JkCQlnX3NoYTUxMl9rWzgwXSA9IHsKCTB4NDI4YTJmOThkNzI4YWUyMiwgMHg3MTM3NDQ5MTIzZWY2NWNkLCAweGI1YzBmYmNmZWM0ZDNiMmYsCgkweGU5YjVkYmE1ODE4OWRiYmMsIDB4Mzk1NmMyNWJmMzQ4YjUzOCwgMHg1OWYxMTFmMWI2MDVkMDE5LAoJMHg5MjNmODJhNGFmMTk0ZjliLCAweGFiMWM1ZWQ1ZGE2ZDgxMTgsIDB4ZDgwN2FhOThhMzAzMDI0MiwKCTB4MTI4MzViMDE0NTcwNmZiZSwgMHgyNDMxODViZTRlZTRiMjhjLCAweDU1MGM3ZGMzZDVmZmI0ZTIsCgkweDcyYmU1ZDc0ZjI3Yjg5NmYsIDB4ODBkZWIxZmUzYjE2OTZiMSwgMHg5YmRjMDZhNzI1YzcxMjM1LAoJMHhjMTliZjE3NGNmNjkyNjk0LCAweGU0OWI2OWMxOWVmMTRhZDIsIDB4ZWZiZTQ3ODYzODRmMjVlMywKCTB4MGZjMTlkYzY4YjhjZDViNSwgMHgyNDBjYTFjYzc3YWM5YzY1LCAweDJkZTkyYzZmNTkyYjAyNzUsCgkweDRhNzQ4NGFhNmVhNmU0ODMsIDB4NWNiMGE5ZGNiZDQxZmJkNCwgMHg3NmY5ODhkYTgzMTE1M2I1LAoJMHg5ODNlNTE1MmVlNjZkZmFiLCAweGE4MzFjNjZkMmRiNDMyMTAsIDB4YjAwMzI3Yzg5OGZiMjEzZiwKCTB4YmY1OTdmYzdiZWVmMGVlNCwgMHhjNmUwMGJmMzNkYTg4ZmMyLCAweGQ1YTc5MTQ3OTMwYWE3MjUsCgkweDA2Y2E2MzUxZTAwMzgyNmYsIDB4MTQyOTI5NjcwYTBlNmU3MCwgMHgyN2I3MGE4NTQ2ZDIyZmZjLAoJMHgyZTFiMjEzODVjMjZjOTI2LCAweDRkMmM2ZGZjNWFjNDJhZWQsIDB4NTMzODBkMTM5ZDk1YjNkZiwKCTB4NjUwYTczNTQ4YmFmNjNkZSwgMHg3NjZhMGFiYjNjNzdiMmE4LCAweDgxYzJjOTJlNDdlZGFlZTYsCgkweDkyNzIyYzg1MTQ4MjM1M2IsIDB4YTJiZmU4YTE0Y2YxMDM2NCwgMHhhODFhNjY0YmJjNDIzMDAxLAoJMHhjMjRiOGI3MGQwZjg5NzkxLCAweGM3NmM1MWEzMDY1NGJlMzAsIDB4ZDE5MmU4MTlkNmVmNTIxOCwKCTB4ZDY5OTA2MjQ1NTY1YTkxMCwgMHhmNDBlMzU4NTU3NzEyMDJhLCAweDEwNmFhMDcwMzJiYmQxYjgsCgkweDE5YTRjMTE2YjhkMmQwYzgsIDB4MWUzNzZjMDg1MTQxYWI1MywgMHgyNzQ4Nzc0Y2RmOGVlYjk5LAoJMHgzNGIwYmNiNWUxOWI0OGE4LCAweDM5MWMwY2IzYzVjOTVhNjMsIDB4NGVkOGFhNGFlMzQxOGFjYiwKCTB4NWI5Y2NhNGY3NzYzZTM3MywgMHg2ODJlNmZmM2Q2YjJiOGEzLCAweDc0OGY4MmVlNWRlZmIyZmMsCgkweDc4YTU2MzZmNDMxNzJmNjAsIDB4ODRjODc4MTRhMWYwYWI3MiwgMHg4Y2M3MDIwODFhNjQzOWVjLAoJMHg5MGJlZmZmYTIzNjMxZTI4LCAweGE0NTA2Y2ViZGU4MmJkZTksIDB4YmVmOWEzZjdiMmM2NzkxNSwKCTB4YzY3MTc4ZjJlMzcyNTMyYiwgMHhjYTI3M2VjZWVhMjY2MTljLCAweGQxODZiOGM3MjFjMGMyMDcsCgkweGVhZGE3ZGQ2Y2RlMGViMWUsIDB4ZjU3ZDRmN2ZlZTZlZDE3OCwgMHgwNmYwNjdhYTcyMTc2ZmJhLAoJMHgwYTYzN2RjNWEyYzg5OGE2LCAweDExM2Y5ODA0YmVmOTBkYWUsIDB4MWI3MTBiMzUxMzFjNDcxYiwKCTB4MjhkYjc3ZjUyMzA0N2Q4NCwgMHgzMmNhYWI3YjQwYzcyNDkzLCAweDNjOWViZTBhMTVjOWJlYmMsCgkweDQzMWQ2N2M0OWMxMDBkNGMsIDB4NGNjNWQ0YmVjYjNlNDJiNiwgMHg1OTdmMjk5Y2ZjNjU3ZTJhLAoJMHg1ZmNiNmZhYjNhZDZmYWVjLCAweDZjNDQxOThjNGE0NzU4MTcKfTsKCi8qCioqIHIgPSByb3RyCioqIGMgPSBjaAoqKiBtID0gbWFqCioqIEUgPSBzaWdtYV9tYWpfMQoqKiBlID0gc2lnbWFfbWFqXzAKKiogUyA9IHNpZ21hX21pbl8xCioqIHMgPSBzaWdtYV9taW5fMAoqLwoKc3RhdGljIHRfd29yZAkJZnVuKHRfd29yZCB4LCB0X3dvcmQgeSwgdF93b3JkIHosIGNoYXIgaWQpCnsKCWlmIChpZCA9PSAncicpCgkJcmV0dXJuICgoeCA+PiB5KSB8ICh4IDw8ICg2NCAtIHkpKSk7CglpZiAoaWQgPT0gJ2MnKQoJCXJldHVybiAoKHggJiB5KSBeICh+eCAmIHopKTsKCWlmIChpZCA9PSAnbScpCgkJcmV0dXJuICgoeCAmIHkpIF4gKHggJiB6KSBeICh5ICYgeikpOwoJaWYgKGlkID09ICdFJykKCQlyZXR1cm4gKGZ1bih4LCAxNCwgMCwgJ3InKSBeIGZ1bih4LCAxOCwgMCwgJ3InKSBeIGZ1bih4LCA0MSwgMCwgJ3InKSk7CglpZiAoaWQgPT0gJ2UnKQoJCXJldHVybiAoZnVuKHgsIDI4LCAwLCAncicpIF4gZnVuKHgsIDM0LCAwLCAncicpIF4gZnVuKHgsIDM5LCAwLCAncicpKTsKCWlmIChpZCA9PSAnUycpCgkJcmV0dXJuIChmdW4oeCwgMTksIDAsICdyJykgXiBmdW4oeCwgNjEsIDAsICdyJykgXiAoeCA+PiA2KSk7CglpZiAoaWQgPT0gJ3MnKQoJCXJldHVybiAoZnVuKHgsIDEsIDAsICdyJykgXiBmdW4oeCwgOCwgMCwgJ3InKSBeICh4ID4+IDcpKTsKCXJldHVybiAoMCk7Cn0KCnN0YXRpYyB2b2lkCQkJZnVsbGZpbF93KHRfd29yZCB3WzgwXSwgY29uc3QgY2hhciBtWzEyOF0pCnsKCWludAkJCQlpOwoKCWkgPSAtMTsKCXdoaWxlICgrK2kgPCAxNikKCXsKCQl3W2ldID0gKCgoKHRfd29yZCltW2kgKiA4ICsgMF0pIDw8IDU2KSAmIDB4ZmYwMDAwMDAwMDAwMDAwMCkKCQkJCXwgKCgoKHRfd29yZCltW2kgKiA4ICsgMV0pIDw8IDQ4KSAmIDB4MDBmZjAwMDAwMDAwMDAwMCkKCQkJCXwgKCgoKHRfd29yZCltW2kgKiA4ICsgMl0pIDw8IDQwKSAmIDB4MDAwMGZmMDAwMDAwMDAwMCkKCQkJCXwgKCgoKHRfd29yZCltW2kgKiA4ICsgM10pIDw8IDMyKSAmIDB4MDAwMDAwZmYwMDAwMDAwMCkKCQkJCXwgKCgoKHRfd29yZCltW2kgKiA4ICsgNF0pIDw8IDI0KSAmIDB4MDAwMDAwMDBmZjAwMDAwMCkKCQkJCXwgKCgoKHRfd29yZCltW2kgKiA4ICsgNV0pIDw8IDE2KSAmIDB4MDAwMDAwMDAwMGZmMDAwMCkKCQkJCXwgKCgoKHRfd29yZCltW2kgKiA4ICsgNl0pIDw8IDgpICYgMHgwMDAwMDAwMDAwMDBmZjAwKQoJCQkJfCAoKCh0X3dvcmQpbVtpICogOCArIDddKSAmIDB4MDAwMDAwMDAwMDAwMDAwMGZmKTsKCX0KCWkgPSAxNTsKCXdoaWxlICgrK2kgPCA4MCkKCXsKCQl3W2ldID0gZnVuKHdbaSAtIDJdLCAwLCAwLCAnUycpICsgd1tpIC0gN10KCQkJCSsgZnVuKHdbaSAtIDE1XSwgMCwgMCwgJ3MnKSArIHdbaSAtIDE2XTsKCX0KfQoKc3RhdGljIHZvaWQJCQljb21wdXRlX2hfY29weSh0X3dvcmQgaFs4XSwgdF93b3JkIHdbODBdKQp7CglpbnQJCQkJaTsKCXRfd29yZAkJCXQxOwoJdF93b3JkCQkJdDI7CgoJaSA9IC0xOwoJd2hpbGUgKCsraSA8IDgwKQoJewoJCXQxID0gaFs3XSArIGZ1bihoWzRdLCAwLCAwLCAnRScpICsgZnVuKGhbNF0sIGhbNV0sIGhbNl0sICdjJykKCQkJCSsgZ19zaGE1MTJfa1tpXSArIHdbaV07CgkJdDIgPSBmdW4oaFswXSwgMCwgMCwgJ2UnKSArIGZ1bihoWzBdLCBoWzFdLCBoWzJdLCAnbScpOwoJCWhbN10gPSBoWzZdOwoJCWhbNl0gPSBoWzVdOwoJCWhbNV0gPSBoWzRdOwoJCWhbNF0gPSBoWzNdICsgdDE7CgkJaFszXSA9IGhbMl07CgkJaFsyXSA9IGhbMV07CgkJaFsxXSA9IGhbMF07CgkJaFswXSA9IHQxICsgdDI7Cgl9Cn0KCnZvaWQJCQkJc2hhNTEyX2Jsb2NrKHRfc2hhNTEyICpjdHgsIGNvbnN0IGNoYXIgbVsxMjhdKQp7Cgl0X3dvcmQJCQl3WzgwXTsKCXRfd29yZAkJCWhfY29weVs4XTsKCglmdWxsZmlsX3codywgbSk7CgltZW1jcHkoaF9jb3B5LCBjdHgtPmgsIHNpemVvZih0X3dvcmQpICogOCk7Cgljb21wdXRlX2hfY29weShoX2NvcHksIHcpOwoJY3R4LT5oWzBdICs9IGhfY29weVswXTsKCWN0eC0+aFsxXSArPSBoX2NvcHlbMV07CgljdHgtPmhbMl0gKz0gaF9jb3B5WzJdOwoJY3R4LT5oWzNdICs9IGhfY29weVszXTsKCWN0eC0+aFs0XSArPSBoX2NvcHlbNF07CgljdHgtPmhbNV0gKz0gaF9jb3B5WzVdOwoJY3R4LT5oWzZdICs9IGhfY29weVs2XTsKCWN0eC0+aFs3XSArPSBoX2NvcHlbN107Cn0K
I2luY2x1ZGUgInNoYTUxMi5oIgoKc3RhdGljIHZvaWQJCWluaXRfc2hhNTEyX3N0cnVjdCh0X3NoYTUxMiAqY3R4KQp7CglmdF9iemVybyhjdHgsIHNpemVvZih0X3NoYTUxMikpOwoJY3R4LT5oWzBdID0gMHg2YTA5ZTY2N2YzYmNjOTA4OwoJY3R4LT5oWzFdID0gMHhiYjY3YWU4NTg0Y2FhNzNiOwoJY3R4LT5oWzJdID0gMHgzYzZlZjM3MmZlOTRmODJiOwoJY3R4LT5oWzNdID0gMHhhNTRmZjUzYTVmMWQzNmYxOwoJY3R4LT5oWzRdID0gMHg1MTBlNTI3ZmFkZTY4MmQxOwoJY3R4LT5oWzVdID0gMHg5YjA1Njg4YzJiM2U2YzFmOwoJY3R4LT5oWzZdID0gMHgxZjgzZDlhYmZiNDFiZDZiOwoJY3R4LT5oWzddID0gMHg1YmUwY2QxOTEzN2UyMTc5Owp9CgpzdGF0aWMgY2hhcgkJKnNoYTUxMl9sYXN0X2Jsb2NrKHRfc2hhNTEyICpjdHgsIGNvbnN0IGNoYXIgKm0sCgkJdWludDY0X3QgbGVuZ3RoLCBjaGFyICpyZXN1bHQpCnsKCWNoYXIJCWJ1ZmZbMTI4XTsKCXVpbnQ2NF90CWJpdF9sZW47CgoJZnRfbWVtY3B5KGJ1ZmYsIG0sIGxlbmd0aCk7CglidWZmW2xlbmd0aCsrXSA9IDB4ODA7CglpZiAobGVuZ3RoID4gMTI4IC0gMTYpCgl7CgkJZnRfYnplcm8oJihidWZmW2xlbmd0aF0pLCAxMjggLSBsZW5ndGgpOwoJCXNoYTUxMl9ibG9jayhjdHgsIGJ1ZmYpOwoJCWxlbmd0aCA9IDA7Cgl9CglmdF9iemVybygmKGJ1ZmZbbGVuZ3RoXSksIDEyOCAtIGxlbmd0aCk7CgliaXRfbGVuID0gY3R4LT5sICogODsKCWJ1ZmZbMTIwXSA9IGJpdF9sZW4gPj4gMHgzOCAmIDB4ZmY7CglidWZmWzEyMV0gPSBiaXRfbGVuID4+IDB4MzAgJiAweGZmOwoJYnVmZlsxMjJdID0gYml0X2xlbiA+PiAweDI4ICYgMHhmZjsKCWJ1ZmZbMTIzXSA9IGJpdF9sZW4gPj4gMHgyMCAmIDB4ZmY7CglidWZmWzEyNF0gPSBiaXRfbGVuID4+IDB4MTggJiAweGZmOwoJYnVmZlsxMjVdID0gYml0X2xlbiA+PiAweDEwICYgMHhmZjsKCWJ1ZmZbMTI2XSA9IGJpdF9sZW4gPj4gMHgwOCAmIDB4ZmY7CglidWZmWzEyN10gPSBiaXRfbGVuID4+IDB4MDAgJiAweGZmOwoJc2hhNTEyX2Jsb2NrKGN0eCwgYnVmZik7CglyZXR1cm4gKHNoYTUxMl9oX3RvX3N0cmluZyhjdHgsIHJlc3VsdCkpOwp9CgpjaGFyCQkJKnNoYTUxMl9zaXplKGNvbnN0IGNoYXIgKm0sIHNpemVfdCBsZW5ndGgpCnsKCXRfc2hhNTEyCWN0eDsKCWNoYXIJCSpyZXN1bHQ7CgoJaWYgKCEocmVzdWx0ID0gKGNoYXIqKW1hbGxvYygxMjkpKSkKCQlyZXR1cm4gKE5VTEwpOwoJaW5pdF9zaGE1MTJfc3RydWN0KCZjdHgpOwoJY3R4LmwgPSBsZW5ndGg7Cgl3aGlsZSAoY3R4LnRtcGwgKyAxMjggPD0gY3R4LmwpCgl7CgkJc2hhNTEyX2Jsb2NrKCZjdHgsICYobVtjdHgudG1wbF0pKTsKCQljdHgudG1wbCArPSAxMjg7Cgl9CglyZXR1cm4gKHNoYTUxMl9sYXN0X2Jsb2NrKCZjdHgsICYobVtjdHgudG1wbF0pLCBjdHgubCAtIGN0eC50bXBsLCByZXN1bHQpKTsKfQoKY2hhcgkJCSpzaGE1MTIoY29uc3QgY2hhciAqbSkKewoJdF9zaGE1MTIJY3R4OwoJY2hhcgkJKnJlc3VsdDsKCglpZiAoIShyZXN1bHQgPSAoY2hhciopbWFsbG9jKDEyOSkpKQoJCXJldHVybiAoTlVMTCk7Cglpbml0X3NoYTUxMl9zdHJ1Y3QoJmN0eCk7CgljdHgubCA9IGZ0X3N0cmxlbihtKTsKCXdoaWxlIChjdHgudG1wbCArIDEyOCA8PSBjdHgubCkKCXsKCQlzaGE1MTJfYmxvY2soJmN0eCwgJihtW2N0eC50bXBsXSkpOwoJCWN0eC50bXBsICs9IDEyODsKCX0KCXJldHVybiAoc2hhNTEyX2xhc3RfYmxvY2soJmN0eCwgJihtW2N0eC50bXBsXSksIGN0eC5sIC0gY3R4LnRtcGwsIHJlc3VsdCkpOwp9CgpjaGFyCQkJKnNoYTUxMl9mZChjb25zdCBpbnQgZmQpCnsKCXRfc2hhNTEyCWN0eDsKCWNoYXIJCSpyZXN1bHQ7CglpbnQJCQlyZXQ7CgljaGFyCQlidWZbMTI4XTsKCglpZiAoIShyZXN1bHQgPSAoY2hhciopbWFsbG9jKDEyOSkpKQoJCXJldHVybiAoTlVMTCk7Cglpbml0X3NoYTUxMl9zdHJ1Y3QoJmN0eCk7CgljdHgubCA9IDA7Cgl3aGlsZSAoKHJldCA9IHJlYWQoZmQsIGJ1ZiwgMTI4KSkgPT0gMTI4KQoJewoJCXNoYTUxMl9ibG9jaygmY3R4LCBidWYpOwoJCWN0eC5sICs9IDEyODsKCX0KCWlmIChyZXQgPT0gLTEpCgkJcmV0dXJuIChOVUxMKTsKCWN0eC5sICs9IHJldDsKCXJldHVybiAoc2hhNTEyX2xhc3RfYmxvY2soJmN0eCwgYnVmLCByZXQsIHJlc3VsdCkpOwp9Cg==
I2luY2x1ZGUgInNoYTUxMi5oIgoKc3RhdGljIGNoYXIJCSpmdF91bHRvYV9iYXNlX3NoYTUxMih1aW50NjRfdCBuYiwgY2hhciAqcmVzKQp7CglyZXNbMF0gPSBCQVNFW25iID4+IDYwICYgMHhmXTsKCXJlc1sxXSA9IEJBU0VbbmIgPj4gNTYgJiAweGZdOwoJcmVzWzJdID0gQkFTRVtuYiA+PiA1MiAmIDB4Zl07CglyZXNbM10gPSBCQVNFW25iID4+IDQ4ICYgMHhmXTsKCXJlc1s0XSA9IEJBU0VbbmIgPj4gNDQgJiAweGZdOwoJcmVzWzVdID0gQkFTRVtuYiA+PiA0MCAmIDB4Zl07CglyZXNbNl0gPSBCQVNFW25iID4+IDM2ICYgMHhmXTsKCXJlc1s3XSA9IEJBU0VbbmIgPj4gMzIgJiAweGZdOwoJcmVzWzhdID0gQkFTRVtuYiA+PiAyOCAmIDB4Zl07CglyZXNbOV0gPSBCQVNFW25iID4+IDI0ICYgMHhmXTsKCXJlc1sxMF0gPSBCQVNFW25iID4+IDIwICYgMHhmXTsKCXJlc1sxMV0gPSBCQVNFW25iID4+IDE2ICYgMHhmXTsKCXJlc1sxMl0gPSBCQVNFW25iID4+IDEyICYgMHhmXTsKCXJlc1sxM10gPSBCQVNFW25iID4+IDggJiAweGZdOwoJcmVzWzE0XSA9IEJBU0VbbmIgPj4gNCAmIDB4Zl07CglyZXNbMTVdID0gQkFTRVtuYiA+PiAwICYgMHhmXTsKCXJldHVybiAocmVzKTsKfQoKY2hhcgkJCSpzaGE1MTJfaF90b19zdHJpbmcodF9zaGE1MTIgKmN0eCwgY2hhciAqcmVzdWx0KQp7CglpbnQJCQlpOwoKCWkgPSAtMTsKCWZ0X21lbXNldChyZXN1bHQsICcwJywgMTI4KTsKCXdoaWxlICgrK2kgPCA4KQoJCWZ0X3VsdG9hX2Jhc2Vfc2hhNTEyKGN0eC0+aFtpXSwgJihyZXN1bHRbaSAqIDE2XSkpOwoJcmVzdWx0WzEyOF0gPSAnXDAnOwoJcmV0dXJuIChyZXN1bHQpOwp9Cg==
I2luY2x1ZGUgInNoYTUxMi5oIgoKdF93b3JkCXJvdHJuKHRfd29yZCB4LCB0X3dvcmQgbikKewoJcmV0dXJuICgoeCA+PiBuKSB8ICh4IDw8ICgzMiAtIG4pKSk7Cn0KCnRfd29yZAljaCh0X3dvcmQgeCwgdF93b3JkIHksIHRfd29yZCB6KQp7CglyZXR1cm4gKCh4ICYgeSkgXiAofnggJiB6KSk7Cn0KCnRfd29yZAltYWoodF93b3JkIHgsIHRfd29yZCB5LCB0X3dvcmQgeikKewoJcmV0dXJuICgoeCAmIHkpIF4gKHggJiB6KSBeICh5ICYgeikpOwp9Cgp0X3dvcmQJc2lnbWFfbWFqKHRfd29yZCB4LCB0X3dvcmQgbikKewoJaWYgKG4gPT0gMCkKCQlyZXR1cm4gKHJvdHJuKHgsIDI4KSBeIHJvdHJuKHgsIDM0KSBeIHJvdHJuKHgsIDM5KSk7CglyZXR1cm4gKHJvdHJuKHgsIDE0KSBeIHJvdHJuKHgsIDE4KSBeIHJvdHJuKHgsIDQxKSk7Cn0KCnRfd29yZAlzaWdtYV9taW4odF93b3JkIHgsIHRfd29yZCBuKQp7CglpZiAobiA9PSAwKQoJCXJldHVybiAocm90cm4oeCwgMSkgXiByb3Rybih4LCA4KSBeICh4ID4+IDcpKTsKCXJldHVybiAocm90cm4oeCwgMTkpIF4gcm90cm4oeCwgNjEpIF4gKHggPj4gNikpOwp9Cg==
